
# -- Contents : driver for regression tests.
# -- Copyright (c) 2014 Synopsys Inc.

# processor name
P=plx

# configuration: Release or Debug
CFG=Release
# RTL language: vlog or vhdl
HDL=vlog

# ISS executable: '$(P)_ca' or '$(P)_st'
ISS = $(P)_ca

# HDL project name
H=$(P)_$(HDL)

# Run/debug configuation: Direct or OCD_VCS
RDC=Direct

ifeq ($(RDC),OCD_VCS)

# Debug client
V = -u verbose -u jts_verbose
V =
DBG_CLIENT=../../debug_client/$P_client $V
export LD_LIBRARY_PATH:=../../hdl/$(P)_$(HDL):$(LD_LIBRARY_PATH)
# HDL executable
SIMV=../../hdl/$(H)/simv
TCL_SCRIPT_ARG=-simv $(SIMV)
ifdef STEP
# OCD_VCS step default is -1 (i.e. resume/continue)
TCL_SCRIPT_ARG:=$(TCL_SCRIPT_ARG) -step $(STEP)
endif
ifdef TMO
TCL_SCRIPT_ARG:=$(TCL_SCRIPT_ARG) -tmo $(TMO)
endif
ifdef GAP
TCL_SCRIPT_ARG:=$(TCL_SCRIPT_ARG) -gap $(GAP)
endif
J=
ifeq ($(SIMV),NONE)
JTS_PORT_NUMBER=41001
J=-u port=$(JTS_PORT_NUMBER)
endif

endif


help:
	@ echo ""
	@ echo "    Run make as follows in one of the test directories"
	@ echo ""
	@ echo "         cd A00_report"
	@ echo "         make -f ../Makefile.test <target>"
	@ echo ""
	@ echo "    where <target> is one of the following"
	@ echo ""
	@ echo "         ok        - native execution and saving of the reference results"
	@ echo "         native    - native execution"
	@ echo "         chess     - compilation with Chess"
	@ echo "         run       - simulation of test program in ISS"
	@ echo "         diff      - check native versus ISS"
	@ echo "         rtlrun    - RTL simulation of test program"
	@ echo "         rtldiff   - check ISS versus RTL"
	@ echo "         clean     - remove intermediate files"
	@ echo "         virgin    - remove test reports"
	@ echo ""
	@ echo "    Hint: define following alias"
	@ echo "         alias mmt 'make -f ../Makefile.test  \!^ '"
	@ echo "    and execute the tests as follows"
	@ echo ""
	@ echo "         cd A00_report"
	@ echo "         mmt <target>"
	@ echo ""


test.prx: ../utils/test.prx
	@ cp ../utils/test.prx .

native: test.gcc
test.gcc: test.prx test.c
	@ echo "   Compiling and running on host"
	@ chessmk -C Native test.prx > gcc.log 2>&1
	@ chessmk -C Native test.prx -S > test.gcc

ok: test.ok
test.ok: test.gcc
	@ sed "1,2 d" test.gcc > test.ok

chess: $(CFG)/test
$(CFG)/test: test.prx test.c
	@ echo "   Compiling on target ($(CFG))"
	@ chessmk -C $(CFG) test.prx > chess.log 2>&1

run: test.mem
test.mem $(CFG)/test.iss.rcd $(CFG)/test.cycle_count: $(CFG)/test
ifeq ($(RDC),Direct)
	@ echo "   Simulating on target ($(CFG)) ($(ISS))"
	@ chessmk -C $(CFG) test.prx -S +D $(ISS) > iss_run.log 2>&1
	@ echo "   (`cat $(CFG)/test.cycle_count` cycles)"
else ifeq ($(RDC),OCD_VCS)
	@ echo "   Simulating on target ($(CFG)) ($(RDC)) ($(HDL))"
	@ $(DBG_CLIENT) -P ../../lib -p $(CFG)/test $J -t "../../bin/ocd_vcs.tcl $(TCL_SCRIPT_ARG)" > $(RDC)_run.log 2>&1
else
	@ echo "   Unknown Run-Debug-Configuration (RDC=$(RDC))"
	exit 1
endif

diff: test.diff
test.diff: test.gcc test.mem
	@ echo "   Checking diffs Native versus CHESS"
	@ regression_compare test dummy_arg > test.diff
	@ tail -1 test.diff

rtlrun: $(CFG)/test.$(H).rcd
$(CFG)/test.$(H).rcd: $(CFG)/test.cycle_count
	@ echo "   Simulating $(HDL) ($(CFG)) (`cat $(CFG)/test.cycle_count` cycles)"
	@ chessmk -C $(CFG) test.prx -H +E $(H) > rtl_run.$(HDL).log 2>&1

rtlgui: $(CFG)/test
	chessmk +H test.prx
	echo $< > appname.cfg
	make -f ../../hdl/$(H)/Makefile
	rm -f appname.cfg

rtldiff: test.rtldiff
test.rtldiff: $(CFG)/test.$(H).rcd # first dependency also produces: $(CFG)/test.iss.rcd
	@ echo "   Checking diffs iss versus $(HDL) ($(CFG))"
	@ rcd_compare $(CFG)/test.iss.rcd $(CFG)/test.$(H).rcd > test.rtldiff
	@ tail -1 test.rtldiff

clean:
	@ rm -f test.mem test.diff test.rtldiff

virgin: clean
	@ rm -rf Release Native Debug DVEfiles
	@ rm -f *.log *.prxui .message JTS_PORT_NUMBER rcdname.cfg inter.vpd
	@ rm -f test.gcc
	@ rm -rf INCA_libs ucli.key

