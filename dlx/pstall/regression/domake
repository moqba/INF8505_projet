#!/bin/csh -f

# -- File : domake
# --
# -- Copyright (c) 2014-2021 Synopsys Inc.

if ($#argv < 1) then
    echo "usage: domake   <make target> [directories]"
    echo "   or: domake \"<make target> [MDL=<proc>_xyz (eg. xyz=dmcache)] [ISS=ca] [HDL=vlog|vhdl] [CFG=Release|Debug] [EXT=_irq]\" [directories]"
    exit(1)
endif

set options = "$1"
shift argv

if ($#argv == 0) then
    set directories = `glob "[ACFILMPST][0-9][0-9]_*"`
else
    set directories = "$argv"
endif

if ( "$options" =~ "*CFG=*" ) then
  set cfg=`echo $options | sed -re 's/.*CFG=(\w+(_\w+)?)([^\w].*)?/\1/'`
else
  set cfg="Release"
endif

if ( "$options" =~ "*EXT=*" ) then
  set ext=`echo $options | sed -re 's/.*EXT=(\w+(_\w+)?)([^\w].*)?/\1/'`
else
  set ext=""
endif

if ( "$options" =~ "*ISS=*" ) then
  set iss=`echo $options | sed -re 's/.*ISS=(\w+(_\w+)?)([^\w].*)?/\1/'`
endif

if ( "$options" =~ "*IGNORE_OCD_TIMEOUT=*" ) then
  set IGNORE_OCD_TIMEOUT=`echo $options | sed -re 's/.*IGNORE_OCD_TIMEOUT=(\w+(_\w+)?)([^\w].*)?/\1/'`
else
  set IGNORE_OCD_TIMEOUT=0
endif

if ( "$cfg" =~ "*LLVM*" ) then
    echo "SKIP Axx for LLVM tests:"
    set llvmdirs=""
    foreach x ($directories)
        echo $x | egrep  "A[0-9][0-9].*"
        set tmp=`echo $x | egrep -v "A[0-9][0-9].*"`
        set llvmdirs="$llvmdirs $tmp"
    end
    set directories = "$llvmdirs"
endif

if ( $?DLX_NO_DOLOOP != 0 ) then
  echo "SKIP Axx do-loop tests"
  set dirs=""
  foreach x ($directories)
      echo $x | egrep  "A(06|07|08)_.*"
      set tmp=`echo $x | egrep -v "A(06|07|08)_.*"`
      set dirs="$dirs $tmp"
  end
  set directories = "$dirs"
endif

if ( $?DLX_NO_ZLOOP != 0 ) then
  echo "SKIP Axx zloop tests"
  set dirs=""
  foreach x ($directories)
      echo $x | egrep  "A(11)_.*"
      set tmp=`echo $x | egrep -v "A(11)_.*"`
      set dirs="$dirs $tmp"
  end
  set directories = "$dirs"
endif

if ( "$options" =~ virgin ) then
    # virgin cannot use make.all as it removes the .message file
    foreach x ($directories)
        echo "$x make $options"
        cd $x
        make -f ../Makefile.test virgin
        cd ..
    end
    set make_status = 0
else
   if ($?NCORES_HOST == 0) set NCORES_HOST = 1
   make -k -f make.all -j $NCORES_HOST MODE="$options" $directories
   set make_status = "$?"
endif

set split = ($options)
if ( $#split > 1 && ( "$split[1]" == clean || "$split[1]" == virgin ) ) then
    # domake 'clean diff ....'
    set target = "$split[2]"
else
    # domake 'diff ...'
    set target = "$split[1]"
endif


# report failed tests when using a "diff" target
if ( "$target" =~ "*diff*" ) then

    switch ($target)
    case diff:
        set file = "test$ext.diff"
        set prof = "test$ext.prf"
        breaksw
    case rtldiff:
        set file = "test$ext.rtldiff"
        set prof = "test$ext.prf"
        breaksw
    case gdbdiff:
        set file = "test$ext.gdbdiff"
        set prof = "dummy"
        breaksw
    case ocddiff:
        set file = "test$ext.ocddiff"
        set prof = "dummy"
        breaksw
    case syscdiff:
        set file = "test$ext.syscdiff"
        set prof = "test$ext.prf"
        breaksw
    case gdbocddiff:
        set file = "test$ext.gdbocddiff"
        set prof = "dummy"
        breaksw
    case gdbsyscdiff:
        set file = "test$ext.gdbsyscdiff"
        set prof = "dummy"
        breaksw
    default:
        echo "ERROR: Unknown *diff* target '$target'"
        breaksw
    endsw

    echo
    echo "overview failing test results:"
    set errors = 0
    set timeouts = 0
    echo "summary of test results" > summary
    echo "-----------------------" >> summary
    foreach x ($directories)
        grep -q "WARNING: OCD_VCS timeout" $x/.message
        if ($? == 0) then
            echo "TIMEOUT in : $x"
            if ( "$IGNORE_OCD_TIMEOUT" == 0 ) then
                set errors = 1;
            endif
            @ timeouts = $timeouts + 1
            continue
        endif
        grep -s "Total number of differences: 0" $x/$file > /dev/null
        if ($? != 0) then
            echo "ERROR in : $x"
            set errors = 1;
        endif
        if ( -f $x/$cfg/$prof ) then
            echo $x >> summary
            grep -s "Total cycle count" $x/$cfg/$prof >> summary
            grep -s "Total size in program memory" $x/$cfg/$prof >> summary
        endif
    end

    if ($errors == 0) then
        if ($timeouts == 0) then
            echo "all tests OK"
        else
            echo "all tests OK, but ignored $timeouts timeouts"
        endif
    else
        exit(1)
    endif
endif

if ( $make_status != 0 ) then
    echo "ERROR: make.all failed with exit code $make_status"
    exit $make_status
else
    echo "OK: domake"
endif
