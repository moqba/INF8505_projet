
// File generated by mist version Q-2020.03#7e5ed72dc8#200717, Wed Mar 22 14:21:38 2023
// Copyright 2014-2020 Synopsys, Inc. All rights reserved.
// --mist2 dlx_basic-_start_basic_ -I../../. -I../.././isg -r +f +i -s dlx

[
    0 : _start_basic typ=w08 bnd=e stl=PMb
   16 : __vola typ=w08 bnd=b stl=PMb
   19 : __extPMb typ=w08 bnd=b stl=PMb
   20 : __extDMb typ=w08 bnd=b stl=DMb
   21 : __sp typ=w32 bnd=b stl=SP
   25 : argv typ=w08 val=-4T0 bnd=a sz=4 algn=4 stl=DMb tref=__P__P__cchar_DMb
   26 : argc typ=w08 val=-8T0 bnd=a sz=4 algn=4 stl=DMb tref=__sint_DMb
   27 : __extDMb___PDMbvoid typ=w08 bnd=b stl=DMb
   28 : __extPMb_void typ=w08 bnd=b stl=PMb
   29 : __extDMb_void typ=w08 bnd=b stl=DMb
   34 : __la typ=w32 bnd=p tref=w32__
   36 : __arg_argc typ=w32 bnd=p tref=__sint__
   37 : __arg_argv typ=w32 bnd=p tref=__P__P__cchar__
   38 : __ct_8s0 typ=w32 val=8s0 bnd=m
   42 : __ct_m4T0 typ=w32 val=-4T0 bnd=m
   46 : __ct_m8T0 typ=w32 val=-8T0 bnd=m
   49 : __fch_argc typ=w32 bnd=m
   50 : __fch_argv typ=w32 bnd=m
   53 : _main typ=int26 val=0r bnd=m
   54 : __link typ=w32 bnd=m
   55 : __tmp typ=w32 bnd=m
   73 : __true typ=bool val=1f bnd=m
   76 : __trgt typ=int26 val=-4j bnd=m
   77 : __seff typ=any bnd=m
]
F_start_basic {
    #4 off=0 nxt=5
    (__vola.15 var=16) source ()  <29>;
    (__extPMb.18 var=19) source ()  <32>;
    (__extDMb.19 var=20) source ()  <33>;
    (__sp.20 var=21) source ()  <34>;
    (argv.24 var=25) source ()  <38>;
    (argc.25 var=26) source ()  <39>;
    (__extDMb___PDMbvoid.26 var=27) source ()  <40>;
    (__extPMb_void.27 var=28) source ()  <41>;
    (__extDMb_void.28 var=29) source ()  <42>;
    (__la.33 var=34 stl=R off=15) inp ()  <47>;
    (__arg_argc.37 var=36 stl=R off=4) inp ()  <51>;
    (__arg_argv.40 var=37 stl=R off=5) inp ()  <54>;
    (__ct_8s0.271 var=38) const_inp ()  <356>;
    (__ct_m4T0.272 var=42) const_inp ()  <357>;
    <42> {
      (__sp.48 var=21 __seff.281 var=77 stl=aluM) _pl_rd_res_reg_const_wr_res_reg_1_B1 (__ct_8s0.271 __sp.20 __sp.20)  <366>;
      (__seff.298 var=77 stl=MC off=0) MC_2_dr_move_aluM_2_any (__seff.281)  <401>;
    } stp=0;
    <43> {
      (argv.60 var=25) _pl_rd_res_reg_const_store_1_B1 (__arg_argv.293 __ct_m4T0.272 argv.24 __sp.48)  <367>;
      (__arg_argv.293 var=37 stl=dmw_wr) dmw_wr_2_dr_move_R_1_w32 (__arg_argv.40)  <398>;
    } stp=16;
    <45> {
      () vd_nop_ID ()  <413>;
    } stp=4;
    <46> {
      () vd_nop_ID ()  <414>;
    } stp=8;
    <47> {
      () vd_nop_ID ()  <415>;
    } stp=12;
    call {
        () chess_separator_scheduler ()  <74>;
    } #5 off=20 nxt=6
    #6 off=20 nxt=7
    (__ct_m8T0.273 var=46) const_inp ()  <358>;
    <41> {
      (argc.62 var=26) _pl_rd_res_reg_const_store_1_B1 (__arg_argc.294 __ct_m8T0.273 argc.25 __sp.48)  <365>;
      (__arg_argc.294 var=36 stl=dmw_wr) dmw_wr_2_dr_move_R_1_w32 (__arg_argc.37)  <399>;
    } stp=0;
    call {
        () chess_separator_scheduler ()  <76>;
    } #7 off=24 nxt=8
    #8 off=24 nxt=9
    (_main.274 var=53) const_inp ()  <359>;
    <38> {
      (__fch_argc.63 var=49 stl=dmw_rd) load__pl_rd_res_reg_const_1_B1 (__ct_m8T0.273 argc.62 __sp.48)  <362>;
      (__fch_argc.301 var=49 stl=R off=4) R_4_dr_move_dmw_rd_3_w32 (__fch_argc.63)  <403>;
    } stp=0;
    <39> {
      (__fch_argv.65 var=50 stl=dmw_rd) load__pl_rd_res_reg_const_1_B1 (__ct_m4T0.272 argv.60 __sp.48)  <363>;
      (__fch_argv.300 var=50 stl=R off=5) R_4_dr_move_dmw_rd_3_w32 (__fch_argv.65)  <402>;
    } stp=4;
    <40> {
      (__link.70 var=54 stl=lnk_pf) jal_const_1_B1 (_main.274)  <364>;
      (__link.295 var=54 stl=LR off=0) LR_4_dr_move_lnk_pf_1_w32 (__link.70)  <400>;
    } stp=8;
    <48> {
      () vd_nop_ID ()  <416>;
    } stp=12;
    call {
        (__tmp.72 var=55 stl=R off=2 __extDMb.75 var=20 __extDMb___PDMbvoid.76 var=27 __extDMb_void.77 var=29 __extPMb.78 var=19 __extPMb_void.79 var=28 __vola.80 var=16) F_main (__link.295 __fch_argc.301 __fch_argv.300 __extDMb.19 __extDMb___PDMbvoid.26 __extDMb_void.28 __extPMb.18 __extPMb_void.27 __vola.15)  <86>;
    } #9 off=40 nxt=43
    #43 off=40 nxt=10
    call {
        () void_chess_exit___sint (__tmp.72)  <90>;
    } #10 off=40 nxt=44
    #44 off=40 nxt=11
    call {
        () chess_separator_scheduler ()  <91>;
    } #11 off=40 nxt=40
    #40 off=40 nxt=1
    (__true.270 var=73) const ()  <355>;
    (__trgt.275 var=76) const_inp ()  <360>;
    <44> {
      () vd_nop_ID ()  <404>;
    } stp=0;
    do {
        {
        } #17
        {
            <37> {
              () j_const_1_B1 (__trgt.275)  <361>;
            } stp=0;
            <49> {
              () vd_nop_ID ()  <417>;
            } stp=4;
        } #1 off=44 tgt=1
        {
            () while_expr (__true.270)  <158>;
        } #20
    } #16 rng=[1,2147483647]
    #28 nxt=-4
    () sink (__vola.80)  <315>;
    () sink (__extPMb.78)  <316>;
    () sink (__extDMb.75)  <317>;
    () sink (__sp.48)  <318>;
    () sink (argv.60)  <319>;
    () sink (argc.62)  <320>;
    () sink (__extDMb___PDMbvoid.76)  <321>;
    () sink (__extPMb_void.79)  <322>;
    () sink (__extDMb_void.77)  <323>;
} #0
0 : 'dlx_basic.c';
----------
0 : (0,3:0,0);
1 : (0,6:4,6);
4 : (0,4:27,0);
5 : (0,4:27,0);
6 : (0,4:17,0);
7 : (0,4:17,0);
8 : (0,5:25,3);
9 : (0,5:15,3);
10 : (0,5:4,3);
11 : (0,5:14,4);
16 : (0,6:4,5);
----------
74 : (0,4:27,0);
76 : (0,4:17,0);
86 : (0,5:15,3);
90 : (0,5:4,3);
91 : (0,5:14,4);
158 : (0,6:4,8);
361 : (0,6:4,8);
362 : (0,5:20,3) (0,4:21,0) (0,4:34,0);
363 : (0,5:25,3) (0,4:34,0);
364 : (0,5:15,3);
365 : (0,4:21,0) (0,4:34,0) (0,4:17,0);
366 : (0,4:4,0);
367 : (0,4:34,0) (0,4:27,0);

