
// File generated by mist version Q-2020.03#7e5ed72dc8#200717, Wed Mar 22 14:21:38 2023
// Copyright 2014-2020 Synopsys, Inc. All rights reserved.
// --mist2 dlx_div_longlong-F__ulonglong_div_called___ulonglong___ulonglong_R__ulonglong_ -I../../. -I../.././isg -r +f +i -s dlx


// m4;   next: m5 (next offset: 24)
000000  4  "00001000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_2_B1 (16,SP,SP); 
000001  0  "00100001"   // /
000002  0  "00000000"   // /
000003  0  "00010000"   // /
000004  4  "00000000"   // () = vd_nop_ID (); 
000005  0  "00000000"   // /
000006  0  "00000000"   // /
000007  0  "00000000"   // /
000008  4  "00000000"   // () = vd_nop_ID (); 
000009  0  "00000000"   // /
000010  0  "00000000"   // /
000011  0  "00000000"   // /
000012  4  "00000000"   // () = vd_nop_ID (); 
000013  0  "00000000"   // /
000014  0  "00000000"   // /
000015  0  "00000000"   // /
000016  4  "10101000"   // (DMb) = _pl_rd_res_reg_const_store_1_B1 (R[6],-8,DMb,SP); 
000017  0  "00100110"   // /
000018  0  "11111111"   // /
000019  0  "11111000"   // /
000020  4  "10101000"   // (DMb) = _pl_rd_res_reg_const_store_1_B1 (R[7],-4,DMb,SP); 
000021  0  "00100111"   // /
000022  0  "11111111"   // /
000023  0  "11111100"   // /

// m5 chess_separator_scheduler;   next: m6 (next offset: 24)

// m6;   next: m9 (next offset: 32)
000024  4  "10101000"   // (DMb) = _pl_rd_res_reg_const_store_1_B1 (R[4],-16,DMb,SP); 
000025  0  "00100100"   // /
000026  0  "11111111"   // /
000027  0  "11110000"   // /
000028  4  "10101000"   // (DMb) = _pl_rd_res_reg_const_store_1_B1 (R[5],-12,DMb,SP); 
000029  0  "00100101"   // /
000030  0  "11111111"   // /
000031  0  "11110100"   // /

// m9 chess_separator_scheduler;   next: m10 (next offset: 32)

// m10;   next: m11 (next offset: 40)
000032  4  "01010000"   // (R[2]) = load__pl_rd_res_reg_const_1_B1 (-16,DMb,SP); 
000033  0  "00100010"   // /
000034  0  "11111111"   // /
000035  0  "11110000"   // /
000036  4  "01010000"   // (R[3]) = load__pl_rd_res_reg_const_1_B1 (-12,DMb,SP); 
000037  0  "00100011"   // /
000038  0  "11111111"   // /
000039  0  "11110100"   // /

// m11 chess_separator_scheduler;   next: m12 (next offset: 40)

// m12;   next: m19 (next offset: 48)
000040  4  "01010000"   // (R[5]) = load__pl_rd_res_reg_const_1_B1 (-8,DMb,SP); 
000041  0  "00100101"   // /
000042  0  "11111111"   // /
000043  0  "11111000"   // /
000044  4  "01010000"   // (R[4]) = load__pl_rd_res_reg_const_1_B1 (-4,DMb,SP); 
000045  0  "00100100"   // /
000046  0  "11111111"   // /
000047  0  "11111100"   // /

// m19 chess_separator_scheduler;   next: m398 (next offset: 48)

// m398;   next: m94, jump target: m348 (next offset: 100)
000048  4  "00000000"   // () = vd_nop_ID (); 
000049  0  "00000000"   // /
000050  0  "00000000"   // /
000051  0  "00000000"   // /
000052  4  "00000000"   // () = vd_nop_ID (); 
000053  0  "00000000"   // /
000054  0  "00000000"   // /
000055  0  "00000000"   // /
000056  4  "00000000"   // (R[8]) = _lt_const_1_B2 (R[5]); 
000057  0  "10100000"   // /
000058  0  "01000000"   // /
000059  0  "00010011"   // /
000060  4  "00000000"   // () = vd_nop_ID (); 
000061  0  "00000000"   // /
000062  0  "00000000"   // /
000063  0  "00000000"   // /
000064  4  "00000000"   // () = vd_nop_ID (); 
000065  0  "00000000"   // /
000066  0  "00000000"   // /
000067  0  "00000000"   // /
000068  4  "00000000"   // () = vd_nop_ID (); 
000069  0  "00000000"   // /
000070  0  "00000000"   // /
000071  0  "00000000"   // /
000072  4  "00000001"   // (R[8]) = lor_const_1_B2 (R[8]); 
000073  0  "00000000"   // /
000074  0  "01000000"   // /
000075  0  "00001010"   // /
000076  4  "00000000"   // () = vd_nop_ID (); 
000077  0  "00000000"   // /
000078  0  "00000000"   // /
000079  0  "00000000"   // /
000080  4  "00000000"   // () = vd_nop_ID (); 
000081  0  "00000000"   // /
000082  0  "00000000"   // /
000083  0  "00000000"   // /
000084  4  "00000000"   // () = vd_nop_ID (); 
000085  0  "00000000"   // /
000086  0  "00000000"   // /
000087  0  "00000000"   // /
000088  4  "00100001"   // () = nez_br_const_1_B1 (R[8],168); 
000089  0  "00000000"   // /
000090  0  "00000000"   // /
000091  0  "10101000"   // /
000092  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000093  0  "00000000"   // /
000094  0  "00000000"   // /
000095  0  "00000000"   // /
000096  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000097  0  "00000000"   // /
000098  0  "00000000"   // /
000099  0  "00000000"   // /

// m94;   next: m170 (next offset: 120)
000100  4  "01001000"   // (R[9]) = const_2_B3 (); 
000101  0  "00001001"   // /
000102  0  "00000000"   // /
000103  0  "00000000"   // /
000104  4  "01001000"   // (R[8]) = const_2_B3 (); 
000105  0  "00001000"   // /
000106  0  "00000000"   // /
000107  0  "00000000"   // /
000108  4  "11000000"   // () = hwdo_const_const_1_B1 (136); 
000109  0  "01000000"   // /
000110  0  "00000000"   // /
000111  0  "10001000"   // /
000112  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000113  0  "00000000"   // /
000114  0  "00000000"   // /
000115  0  "00000000"   // /
000116  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000117  0  "00000000"   // /
000118  0  "00000000"   // /
000119  0  "00000000"   // /

// m170;   next: m51 (next offset: 152)
000120  4  "10011101" .loop_nesting 1    // (R[7]) = _rs_const_1_B1 (R[9]); 
000121  0  "00100111"   // /
000122  0  "00000000"   // /
000123  0  "00011111"   // /
000124  4  "10011100"   // (R[6]) = _rs_const_1_B1 (R[2]); 
000125  0  "01000110"   // /
000126  0  "00000000"   // /
000127  0  "00011111"   // /
000128  4  "10001001"   // (R[9]) = _ls_const_1_B1 (R[9]); 
000129  0  "00101001"   // /
000130  0  "00000000"   // /
000131  0  "00000001"   // /
000132  4  "10001001"   // (R[8]) = _ls_const_1_B1 (R[8]); 
000133  0  "00001000"   // /
000134  0  "00000000"   // /
000135  0  "00000001"   // /
000136  4  "00000000"   // () = vd_nop_ID (); 
000137  0  "00000000"   // /
000138  0  "00000000"   // /
000139  0  "00000000"   // /
000140  4  "00000000"   // () = vd_nop_ID (); 
000141  0  "00000000"   // /
000142  0  "00000000"   // /
000143  0  "00000000"   // /
000144  4  "00000000"   // (R[9]) = _or_1_B1 (R[9],R[6]); 
000145  0  "11001001"   // /
000146  0  "01001000"   // /
000147  0  "00001010"   // /
000148  4  "00000000"   // (R[8]) = _or_1_B1 (R[8],R[7]); 
000149  0  "11101000"   // /
000150  0  "01000000"   // /
000151  0  "00001010"   // /

// m51 chess_separator_scheduler;   next: m187 (next offset: 152)

// m187;   next: m53 (next offset: 176)
000152  4  "10011100"   // (R[7]) = _rs_const_1_B1 (R[3]); 
000153  0  "01100111"   // /
000154  0  "00000000"   // /
000155  0  "00011111"   // /
000156  4  "10001000"   // (R[2]) = _ls_const_1_B1 (R[2]); 
000157  0  "01000010"   // /
000158  0  "00000000"   // /
000159  0  "00000001"   // /
000160  4  "10001000"   // (R[3]) = _ls_const_1_B1 (R[3]); 
000161  0  "01100011"   // /
000162  0  "00000000"   // /
000163  0  "00000001"   // /
000164  4  "00000000"   // () = vd_nop_ID (); 
000165  0  "00000000"   // /
000166  0  "00000000"   // /
000167  0  "00000000"   // /
000168  4  "00000000"   // () = vd_nop_ID (); 
000169  0  "00000000"   // /
000170  0  "00000000"   // /
000171  0  "00000000"   // /
000172  4  "00000000"   // (R[2]) = _or_1_B1 (R[2],R[7]); 
000173  0  "01000111"   // /
000174  0  "00010000"   // /
000175  0  "00001010"   // /

// m53 chess_separator_scheduler;   next: m362 (next offset: 176)

// m362;   next: m197, jump target: m62 (next offset: 240)
000176  4  "00000000"   // (R[7]) = _eq_1_B1 (R[5],R[8]); 
000177  0  "10101000"   // /
000178  0  "00111000"   // /
000179  0  "00001011"   // /
000180  4  "00000000"   // (R[6]) = _le_1_B1 (R[4],R[9]); 
000181  0  "10001001"   // /
000182  0  "00110000"   // /
000183  0  "00010001"   // /
000184  4  "00000000"   // (R[10]) = _lt_1_B1 (R[5],R[8]); 
000185  0  "10101000"   // /
000186  0  "01010000"   // /
000187  0  "00010100"   // /
000188  4  "00000000"   // () = vd_nop_ID (); 
000189  0  "00000000"   // /
000190  0  "00000000"   // /
000191  0  "00000000"   // /
000192  4  "00000000"   // () = vd_nop_ID (); 
000193  0  "00000000"   // /
000194  0  "00000000"   // /
000195  0  "00000000"   // /
000196  4  "00000000"   // (R[7]) = land_1_B1 (R[7],R[6]); 
000197  0  "11000111"   // /
000198  0  "00111000"   // /
000199  0  "00000011"   // /
000200  4  "00000000"   // () = vd_nop_ID (); 
000201  0  "00000000"   // /
000202  0  "00000000"   // /
000203  0  "00000000"   // /
000204  4  "00000000"   // () = vd_nop_ID (); 
000205  0  "00000000"   // /
000206  0  "00000000"   // /
000207  0  "00000000"   // /
000208  4  "00000000"   // () = vd_nop_ID (); 
000209  0  "00000000"   // /
000210  0  "00000000"   // /
000211  0  "00000000"   // /
000212  4  "00000000"   // (R[7]) = lor_1_B1 (R[10],R[7]); 
000213  0  "11101010"   // /
000214  0  "00111000"   // /
000215  0  "00001010"   // /
000216  4  "00000000"   // () = vd_nop_ID (); 
000217  0  "00000000"   // /
000218  0  "00000000"   // /
000219  0  "00000000"   // /
000220  4  "00000000"   // () = vd_nop_ID (); 
000221  0  "00000000"   // /
000222  0  "00000000"   // /
000223  0  "00000000"   // /
000224  4  "00000000"   // () = vd_nop_ID (); 
000225  0  "00000000"   // /
000226  0  "00000000"   // /
000227  0  "00000000"   // /
000228  4  "00010100"   // () = eqz_br_const_1_B1 (R[7],16); 
000229  0  "11100000"   // /
000230  0  "00000000"   // /
000231  0  "00010000"   // /
000232  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000233  0  "00000000"   // /
000234  0  "00000000"   // /
000235  0  "00000000"   // /
000236  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000237  0  "00000000"   // /
000238  0  "00000000"   // /
000239  0  "00000000"   // /

// m197;   next: m59 (next offset: 248)
000240  4  "00000001"   // (R[9],MC) = sub_1_B1 (R[9],R[4]); 
000241  0  "00100100"   // /
000242  0  "01001000"   // /
000243  0  "00011000"   // /
000244  4  "00000001"   // (R[8],MC) = subx_1_B1 (R[8],R[5],MC); 
000245  0  "00000101"   // /
000246  0  "01000000"   // /
000247  0  "00011001"   // /

// m59 chess_separator_scheduler;   next: m205 (next offset: 248)

// m205;   next: m415 (next offset: 252)
000248  4  "01010100"   // (R[3]) = _or_const_1_B1 (R[3]); 
000249  0  "01100011"   // /
000250  0  "00000000"   // /
000251  0  "00000001"   // /

// m62;   next: m415 (next offset: 252)

// m415;   next: m414, loop target: m170 (next offset: 256)
000252  4  "00000000" .swstall "between_loop_ends"   // () = vd_nop_ID (); 
000253  0  "00000000"   // /
000254  0  "00000000"   // /
000255  0  "00000000"   // /

// m414, jump target: m77 (next offset: 264)
000256  4  "00100100" .loop_nesting 0    // () = j_const_1_B1 (80); 
000257  0  "00000000"   // /
000258  0  "00000000"   // /
000259  0  "01010000"   // /
000260  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000261  0  "00000000"   // /
000262  0  "00000000"   // /
000263  0  "00000000"   // /

// m348;   next: m120, jump target: m35 (next offset: 328)
000264  4  "00000000"   // (R[8]) = _eq_1_B1 (R[5],R[2]); 
000265  0  "01000101"   // /
000266  0  "01000000"   // /
000267  0  "00001011"   // /
000268  4  "00000000"   // (R[9]) = _le_1_B1 (R[4],R[3]); 
000269  0  "10000011"   // /
000270  0  "01001000"   // /
000271  0  "00010001"   // /
000272  4  "00000000"   // (R[7]) = _lt_1_B1 (R[5],R[2]); 
000273  0  "10100010"   // /
000274  0  "00111000"   // /
000275  0  "00010100"   // /
000276  4  "00000000"   // () = vd_nop_ID (); 
000277  0  "00000000"   // /
000278  0  "00000000"   // /
000279  0  "00000000"   // /
000280  4  "00000000"   // () = vd_nop_ID (); 
000281  0  "00000000"   // /
000282  0  "00000000"   // /
000283  0  "00000000"   // /
000284  4  "00000001"   // (R[8]) = land_1_B1 (R[8],R[9]); 
000285  0  "00001001"   // /
000286  0  "01000000"   // /
000287  0  "00000011"   // /
000288  4  "01010100"   // R[9] = R[3]; 
000289  0  "01101001"   // /
000290  0  "00000000"   // /
000291  0  "00000000"   // /
000292  4  "01001000"   // (R[3]) = const_2_B3 (); 
000293  0  "00000011"   // /
000294  0  "00000000"   // /
000295  0  "00000000"   // /
000296  4  "00000000"   // () = vd_nop_ID (); 
000297  0  "00000000"   // /
000298  0  "00000000"   // /
000299  0  "00000000"   // /
000300  4  "00000000"   // (R[7]) = lor_1_B1 (R[7],R[8]); 
000301  0  "11101000"   // /
000302  0  "00111000"   // /
000303  0  "00001010"   // /
000304  4  "01010100"   // R[8] = R[2]; 
000305  0  "01001000"   // /
000306  0  "00000000"   // /
000307  0  "00000000"   // /
000308  4  "01001000"   // (R[2]) = const_2_B3 (); 
000309  0  "00000010"   // /
000310  0  "00000000"   // /
000311  0  "00000000"   // /
000312  4  "00000000"   // () = vd_nop_ID (); 
000313  0  "00000000"   // /
000314  0  "00000000"   // /
000315  0  "00000000"   // /
000316  4  "00010100"   // () = eqz_br_const_1_B1 (R[7],16); 
000317  0  "11100000"   // /
000318  0  "00000000"   // /
000319  0  "00010000"   // /
000320  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000321  0  "00000000"   // /
000322  0  "00000000"   // /
000323  0  "00000000"   // /
000324  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000325  0  "00000000"   // /
000326  0  "00000000"   // /
000327  0  "00000000"   // /

// m120;   next: m77 (next offset: 340)
000328  4  "00000001"   // (R[9],MC) = sub_1_B1 (R[9],R[4]); 
000329  0  "00100100"   // /
000330  0  "01001000"   // /
000331  0  "00011000"   // /
000332  4  "00000001"   // (R[8],MC) = subx_1_B1 (R[8],R[5],MC); 
000333  0  "00000101"   // /
000334  0  "01000000"   // /
000335  0  "00011001"   // /
000336  4  "01010100"   // (R[3]) = const_1_B2 (); 
000337  0  "00000011"   // /
000338  0  "00000000"   // /
000339  0  "00000001"   // /

// m35;   next: m77 (next offset: 340)

// m77 (next offset: /)
000340  4  "00001000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (-16,SP,SP); 
000341  0  "00100001"   // /
000342  0  "11111111"   // /
000343  0  "11110000"   // /
000344  4  "00110001"   // () = __rts_jr_1_B1 (R[15]); 
000345  0  "11100000"   // /
000346  0  "00000000"   // /
000347  0  "00000000"   // /
000348  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000349  0  "00000000"   // /
000350  0  "00000000"   // /
000351  0  "00000000"   // /
000352  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000353  0  "00000000"   // /
000354  0  "00000000"   // /
000355  0  "00000000"   // /

