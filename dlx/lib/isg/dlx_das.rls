
// File generated by animal version Q-2020.03#7e5ed72dc8#200717, Wed Mar 22 14:16:27 2023
// Copyright 2014-2020 Synopsys, Inc. All rights reserved.
// animal -A -Iisg +wisg -Iruntime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=300 -h -D__darts__ -D__programmers_view__ dlx

orrule alu_instr {
    ( enc {} @p 0 )
    ins : 93;
    alu_lhi ( enc {} @p 0 )
    ins : 45;
    alu_lmul ( enc {} @p 0 )
    ins : 40;
    alu_rr ( enc {} @p 0 )
    ins : 34;
    alu_rri ( enc {} @p 0 )
    ins : 42;
    alu_rrr ( enc {} @p 0 )
    ins : 94;
    alu_rrr2 ( enc {} @p 0 )
    ins : 36;
    alu_rru ( enc {} @p 0 )
    ins : 44;
}

andrule alu_lhi {
    ( enc {} @p 0 )
    ins : 45;
    ctrn i (
         __CTaluU_int16p_cstP16_EX
    )
}

andrule alu_lmul {
    ( enc {} @p 0 )
    ins : 40;
}

andrule alu_rr {
    ( enc {} @p 0 )
    ins : 34;
}

andrule alu_rri {
    ( enc {} @p 0 )
    ins : 42;
    ctrn i (
         __CTpS2_int16_cstP16_ID
    )
}

andrule alu_rrr {
    ( enc {} @p 0 )
    ins : 94;
}

andrule alu_rrr2 {
    ( enc {} @p 0 )
    ins : 36;
}

andrule alu_rru {
    ( enc {} @p 0 )
    ins : 44;
    ctrn i (
         __CTpS2_uint16_cstP16_ID
    )
}

andrule br_instr {
    ( enc {} @p 0 )
    ins : 62;
    ctrn  (
         __CTds1_uint1_cstV1_ID
         __CTds2_uint1_cstV1_EX
    )
    ctrn i (
         __CTof16_int16_cstP16_EX
    )
}

orrule control_instr {
    ( enc {} @p 0 )
    ins : 95;
    br_instr ( enc {} @p 0 )
    ins : 62;
    do_instr ( enc {} @p 0 )
    ins : 75;
    doi_instr ( enc {} @p 0 )
    ins : 78;
    j_instr ( enc {} @p 0 )
    ins : 67;
    jal_instr ( enc {} @p 0 )
    ins : 68;
    jalr_instr ( enc {} @p 0 )
    ins : 71;
    jr_instr ( enc {} @p 0 )
    ins : 72;
    nop_instr ( enc {} @p 0 )
    ins : 73;
    swbrk_instr ( enc {} @p 0 )
    ins : 74;
    zloop_instr ( enc {} @p 0 )
    ins : 96;
}

orrule div_instr {
    ( enc {} @p 0 )
    ins : 85;
    div_rr ( enc {} @p 0 )
    ins : 85;
}

andrule div_rr {
    ( enc {} @p 0 )
    ins : 85;
}

orrule dlx {
    ( enc {} @p 0 )
    ins : 97;
    alu_instr ( enc {} @p 0 )
    ins : 93;
    control_instr ( enc {} @p 0 )
    ins : 95;
    div_instr ( enc {} @p 0 )
    ins : 85;
    load_store_instr ( enc {} @p 0 )
    ins : 47;
}

andrule do_instr {
    ( enc {} @p 0 )
    ins : 75;
}

andrule doi_instr {
    ( enc {} @p 0 )
    ins : 78;
    ctrn count (
         __CTlcw_uint10_cstP6_EX
    )
}

andrule j_instr {
    ( enc {} @p 0 )
    ins : 67;
    ctrn  (
         __CTds1_uint1_cstV1_ID
    )
    ctrn i (
         __CTof26_int26_cstP6_ID
    )
}

andrule jal_instr {
    ( enc {} @p 0 )
    ins : 68;
    ctrn  (
         __CTds1_uint1_cstV1_ID
    )
    ctrn i (
         __CTof26_int26_cstP6_ID
    )
}

andrule jalr_instr {
    ( enc {} @p 0 )
    ins : 71;
    ctrn  (
         __CTds1_uint1_cstV1_ID
         __CTds2_uint1_cstV1_EX
    )
}

andrule jr_instr {
    ( enc {} @p 0 )
    ins : 72;
    ctrn  (
         __CTds1_uint1_cstV1_ID
         __CTds2_uint1_cstV1_EX
    )
}

andrule load {
    ( enc {} @p 0 )
    ins : 98;
    ctrn i (
         __CTaguB_int16_cstP16_EX
    )
}

andrule load_pm {
    ( enc {} @p 0 )
    ins : 99;
    ctrn m (
         __CTaguB_int5_cstP16_EX
    )
}

orrule load_store_instr {
    ( enc {} @p 0 )
    ins : 47;
    load ( enc {} @p 0 )
    ins : 98;
    load_pm ( enc {} @p 0 )
    ins : 99;
    store ( enc {} @p 0 )
    ins : 100;
    store_pm ( enc {} @p 0 )
    ins : 101;
}

andrule loop {
    ( enc {l} @p 16 )
    ins : 77;
    ctrn  (
         __CTds1_uint1_cstV1_ID
         __CTds2_uint1_cstV1_EX
    )
    ctrn last (
         __CTle_offs_int16_cstP16_EX
    )
}

andrule mZC {
    (  )
    ins : 82;
}

andrule mZE {
    (  )
    ins : 81;
}

andrule mZS {
    (  )
    ins : 79;
}

andrule nop_instr {
    ( enc {} @p 0 )
    ins : 73;
}

andrule rdS1 {
    ( enc {s1} @p 6 )
    ins : 0;
    ctrn r (
         __CTuint5_cstP6_ID
    )
}

andrule rdS2 {
    ( enc {s2} @p 11 )
    ins : 2;
    ctrn r (
         __CTuint5_cstP11_ID
    )
}

andrule store {
    ( enc {} @p 0 )
    ins : 100;
    ctrn i (
         __CTaguB_int16_cstP16_EX
    )
}

andrule store_pm {
    ( enc {} @p 0 )
    ins : 101;
    ctrn m (
         __CTaguB_int5_cstP16_EX
    )
}

andrule swbrk_instr {
    ( enc {} @p 0 )
    ins : 74;
    ctrn  (
         __CTocd_swbreak_uint1_cstV1_ID
    )
}

andrule wrD1 {
    ( enc {d1} @p 11 )
    ins : 102;
    ( enc {d1} @p 16 )
    ins : 103;
    ctrn r (
         __CTuint5_cstP16_WB
         __CTuint5_cstP11_WB
    )
}

andrule wrD2 {
    ( enc {d2} @p 6 )
    ins : 60;
    ctrn r (
         __CTuint5_cstP6_WB
    )
}

andrule wrE1 {
    ( enc {d1} @p 11 )
    ins : 49;
    ( enc {d1} @p 16 )
    ins : 36;
    ctrn r (
         __CTuint5_cstP16_WB
         __CTuint5_cstP11_WB
    )
}

andrule wrLR {
    (  )
    ins : 69;
}

andrule wrPH {
    (  )
    ins : 40;
}

andrule wrPL {
    (  )
    ins : 40;
}

andrule zloop_ci_instr {
    ( enc {} @p 0 )
    ins : 84;
    ctrn c (
         __CTtzc_uint24_cstP6_23_19P13_18_0_EX
    )
}

andrule zloop_cr_instr {
    ( enc {} @p 0 )
    ins : 83;
}

andrule zloop_e_instr {
    ( enc {} @p 0 )
    ins : 81;
    ctrn  (
         __CTds1_uint1_cstV1_ID
         __CTds2_uint1_cstV1_EX
    )
    ctrn e (
         __CTle_offs_int16_cstP16_EX
    )
}

orrule zloop_instr {
    ( enc {} @p 0 )
    ins : 96;
    zloop_ci_instr ( enc {} @p 0 )
    ins : 84;
    zloop_cr_instr ( enc {} @p 0 )
    ins : 83;
    zloop_e_instr ( enc {} @p 0 )
    ins : 81;
    zloop_s_instr ( enc {} @p 0 )
    ins : 79;
}

andrule zloop_s_instr {
    ( enc {} @p 0 )
    ins : 79;
    ctrn  (
         __CTds1_uint1_cstV1_ID
         __CTds2_uint1_cstV1_EX
    )
    ctrn s (
         __CTle_offs_int16_cstP16_EX
    )
}

enum function_code{
    1 ( enc {op} @p 21 )
    ins : 104;
    2 ( enc {op} @p 21 )
    ins : 105;
    3 ( enc {op} @p 21 )
    ins : 106;
    10 ( enc {op} @p 21 )
    ins : 107;
    11 ( enc {op} @p 21 )
    ins : 108;
    12 ( enc {op} @p 21 )
    ins : 109;
    13 ( enc {op} @p 21 )
    ins : 110;
    14 ( enc {op} @p 21 )
    ins : 111;
    15 ( enc {op} @p 21 )
    ins : 112;
    16 ( enc {op} @p 21 )
    ins : 113;
    17 ( enc {op} @p 21 )
    ins : 114;
    18 ( enc {op} @p 21 )
    ins : 115;
    19 ( enc {op} @p 21 )
    ins : 116;
    20 ( enc {op} @p 21 )
    ins : 117;
    21 ( enc {op} @p 21 )
    ins : 118;
    22 ( enc {op} @p 21 )
    ins : 119;
    23 ( enc {op} @p 21 )
    ins : 120;
    24 ( enc {op} @p 21 )
    ins : 121;
    25 ( enc {op} @p 21 )
    ins : 122;
    26 ( enc {op} @p 21 )
    ins : 123;
    27 ( enc {op} @p 21 )
    ins : 124;
    32 ( enc {op} @p 21 )
    ins : 36;
    33 ( enc {op} @p 21 )
    ins : 37;
    34 ( enc {op} @p 21 )
    ins : 38;
    35 ( enc {op} @p 21 )
    ins : 39;
    36 ( enc {op} @p 21 )
    ins : 34;
    48 ( enc {op} @p 21 )
    ins : 125;
    49 ( enc {op} @p 21 )
    ins : 126;
    50 ( enc {op} @p 21 )
    ins : 127;
    51 ( enc {op} @p 21 )
    ins : 128;
    52 ( enc {op} @p 21 )
    ins : 129;
    53 ( enc {op} @p 21 )
    ins : 130;
    54 ( enc {op} @p 21 )
    ins : 131;
    55 ( enc {op} @p 21 )
    ins : 132;
}

enum opcode{
    2 ( enc {op} @p 0 )
    ins : 133;
    3 ( enc {op} @p 0 )
    ins : 134;
    4 ( enc {op} @p 0 )
    ins : 135;
    5 ( enc {op} @p 0 )
    ins : 63;
    8 ( enc {op} @p 0 )
    ins : 64;
    13 ( enc {op} @p 0 )
    ins : 136;
    14 ( enc {op} @p 0 )
    ins : 137;
    15 ( enc {op} @p 0 )
    ins : 138;
    16 ( enc {op} @p 0 )
    ins : 139;
    17 ( enc {op} @p 0 )
    ins : 140;
    19 ( enc {op} @p 0 )
    ins : 141;
    20 ( enc {op} @p 0 )
    ins : 142;
    21 ( enc {op} @p 0 )
    ins : 143;
    23 ( enc {op} @p 0 )
    ins : 144;
    24 ( enc {op} @p 0 )
    ins : 145;
    25 ( enc {op} @p 0 )
    ins : 146;
    26 ( enc {op} @p 0 )
    ins : 147;
    27 ( enc {op} @p 0 )
    ins : 148;
    28 ( enc {op} @p 0 )
    ins : 149;
    29 ( enc {op} @p 0 )
    ins : 150;
    30 ( enc {op} @p 0 )
    ins : 151;
    31 ( enc {op} @p 0 )
    ins : 152;
    32 ( enc {op} @p 0 )
    ins : 153;
    33 ( enc {op} @p 0 )
    ins : 154;
    34 ( enc {op} @p 0 )
    ins : 155;
    35 ( enc {op} @p 0 )
    ins : 156;
    36 ( enc {op} @p 0 )
    ins : 157;
    37 ( enc {op} @p 0 )
    ins : 158;
    38 ( enc {op} @p 0 )
    ins : 159;
    39 ( enc {op} @p 0 )
    ins : 160;
    40 ( enc {op} @p 0 )
    ins : 161;
    41 ( enc {op} @p 0 )
    ins : 162;
    42 ( enc {op} @p 0 )
    ins : 163;
    44 ( enc {op} @p 0 )
    ins : 164;
    45 ( enc {op} @p 0 )
    ins : 165;
}

enum stage_names{
}

