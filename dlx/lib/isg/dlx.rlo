#include "dlx_define.h"

// for use in (inline) assembly

// immediate for 'mv ze, imm', 'mv zs, imm'. chess_pc_offset = 2 instr
0 : (((symbol_addr_AR  + addend )  - item_addr_AR )  - 8 )  :  int16 [15..0]@0 in w08[4]



//--- generated by tool in addition to those copied from ``dlx.r'' ---


// File generated by noodle version Q-2020.03#7e5ed72dc8#200717, Wed Mar 22 14:16:27 2023
// Copyright 2014-2020 Synopsys, Inc. All rights reserved.
// noodle -Pc -Iisg +wisg -Iruntime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=300 +NOrlt -D__chess__ -D__programmers_view__ dlx

// minimum bits to cover any memory (alias) : 15

//immediate in control operation `vd_j_of26_ID' relative pc_offset=4
//immediate in control operation `lnk_pf_jal_of26_ID' relative pc_offset=4
1 : (((symbol_addr_AR  + addend )  - item_addr_AR )  - 4 )  :  int26 [25..0]@0 in w08[4]      // with default addend 0

//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `dm_addr'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `w1'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `pd1w'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `pe1w'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `aluB'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `aluC'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `aguB'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `aguC'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `tzs'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `tze'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `__pS2_r'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `__pS2_w'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `__pD1_r'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `__pD1_w'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `__pE1_r'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `__pE1_w'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `__t'
2 : ((symbol_addr_AR  + addend )  >> 16 )  :  int16 [15..0]@0 in w08[4] nostrict      // with default addend 0

//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `w1'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `pd1w'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `pe1w'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `aluB'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `aluC'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `shB'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `__pS2_r'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `__pS2_w'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `__pD1_r'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `__pD1_w'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `__pE1_r'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `__pE1_w'
3 : ((symbol_addr_AR  + addend )  >> 16 )  :  uint16 [15..0]@0 in w08[4] nostrict      // with default addend 0

//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `zcw'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `tzc'
4 : ((symbol_addr_AR  + addend )  >> 16 )  :  uint24 [23..19]@21 [18..0]@0 in w08[4]      // with default addend 0

//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `zsw' zloop_relative pc_offset=8
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `zew' zloop_relative pc_offset=8
5 : ((((symbol_addr_AR  + addend )  >> 16 )  - item_addr_AR )  - 8 )  :  int16 [15..0]@0 in w08[4] nostrict      // with default addend 0

//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `aluU'
//immediate for type `int16p' [high 16 bits of pointer >>109 routed to `__CTaluU_int16p_cstP16_EX'
6 : ((symbol_addr_AR  + addend )  >> 16 )  :  int16p [15..0]@0 in w08[4] nostrict      // with default addend 0

//immediate for type `uint16' [16 bits of pointer >>93 routed to `__CTpS2_uint16_cstP16_ID'
7 : ((symbol_addr_AR  + addend )  & 65535 )  :  uint16 [15..0]@0 in w08[4] nostrict      // with default addend 0

//immediate for type `w32' routed to `dm_addr'
//immediate for type `w32' routed to `w1'
//immediate for type `w32' routed to `pd1w'
//immediate for type `w32' routed to `pe1w'
//immediate for type `w32' routed to `aluB'
//immediate for type `w32' routed to `aluC'
//immediate for type `w32' routed to `aguB'
//immediate for type `w32' routed to `aguC'
//immediate for type `w32' routed to `tzs'
//immediate for type `w32' routed to `tze'
//immediate for type `w32' routed to `__pS2_r'
//immediate for type `w32' routed to `__pS2_w'
//immediate for type `w32' routed to `__pD1_r'
//immediate for type `w32' routed to `__pD1_w'
//immediate for type `w32' routed to `__pE1_r'
//immediate for type `w32' routed to `__pE1_w'
//immediate for type `w32' routed to `__t'
8 : (symbol_addr_AR  + addend )  :  int16 [15..0]@0 in w08[4]      // with default addend 0

//immediate for type `w32' routed to `w1'
//immediate for type `w32' routed to `pd1w'
//immediate for type `w32' routed to `pe1w'
//immediate for type `w32' routed to `aluB'
//immediate for type `w32' routed to `aluC'
//immediate for type `w32' routed to `shB'
//immediate for type `w32' routed to `__pS2_r'
//immediate for type `w32' routed to `__pS2_w'
//immediate for type `w32' routed to `__pD1_r'
//immediate for type `w32' routed to `__pD1_w'
//immediate for type `w32' routed to `__pE1_r'
//immediate for type `w32' routed to `__pE1_w'
9 : (symbol_addr_AR  + addend )  :  uint16 [15..0]@0 in w08[4]      // with default addend 0

//immediate for type `w32' routed to `zcw'
//immediate for type `w32' routed to `tzc'
10 : (symbol_addr_AR  + addend )  :  uint24 [23..19]@21 [18..0]@0 in w08[4]      // with default addend 0

//pointer of type `w32' in memory `DMw'
11 : (symbol_addr_AR  + addend )  :  w32 [31..0]@0 in w08[4] nostrict      // with default addend 0
