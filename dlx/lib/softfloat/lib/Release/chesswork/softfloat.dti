
// File generated by noodle version Q-2020.03#7e5ed72dc8#200717, Wed Mar 22 14:21:39 2023
// Copyright 2014-2020 Synopsys, Inc. All rights reserved.
// noodle -I.. -I../isg -I../runtime/include -DCHESS_CXX_ATTRIBUTES -D__tct_patch__=300 -idlx_chess.h +NOxrt +NOrlt +wlib/Release/chesswork ../softfloat/softfloat.c +Q0=+Sal,+Sca,+Osps,+NOtcr,+NOxrt,+NOrle,+NOrlt dlx

         __sint_DMb_stat : _basic(DMb_stat,4,4) __sint;
                  bool__ : _basic() bool;
               __cchar__ : _basic() __cchar;
               __schar__ : _basic() __schar;
               __uchar__ : _basic() __uchar;
              __sshort__ : _basic() __sshort;
              __ushort__ : _basic() __ushort;
                __uint__ : _basic() __uint;
               __slong__ : _basic() __slong;
               __ulong__ : _basic() __ulong;
                __sint__ : _basic() __sint;
           __slonglong__ : _basic() __slonglong;
           __ulonglong__ : _basic() __ulonglong;
                 uint1__ : _basic() uint1;
                int16p__ : _basic() int16p;
                uint16__ : _basic() uint16;
                   w32__ : _basic() w32;
               float32__ : _typedef() float32 $__uint__;
              __ffloat__ : _basic() __ffloat;
             __fdouble__ : _basic() __fdouble;
         __flongdouble__ : _basic() __flongdouble;
               __Pvoid__ : _basic() __Pvoid;
           int8_DMb_stat : _typedef(DMb_stat,4,4) int8 $__sint_DMb_stat;
            __PPMbvoid__ : _basic() __PPMbvoid;
            __PDMbvoid__ : _basic() __PDMbvoid;
       __PDMb_statvoid__ : _basic() __PDMb_statvoid;
       __ushort_DMb_stat : _basic(DMb_stat,2,2) __ushort;
         bits16_DMb_stat : _typedef(DMb_stat,2,2) bits16 $__ushort_DMb_stat;
__A16DMb_stat__ushort_DMb_stat : _array(DMb_stat,32,2) [16] $bits16_DMb_stat;
                bits32__ : _typedef() bits32 $__uint__;
                  void__ : _basic() void;
                 int16__ : _typedef() int16 $__sint__;
                  int8__ : _typedef() int8 $__sint__;
                  flag__ : _typedef() flag $__sint__;
              __sint_DMb : _basic(DMb,4,4) __sint;
                flag_DMb : _typedef(DMb,4,4) flag $__sint_DMb;
              __uint_DMb : _basic(DMb,4,4) __uint;
              bits32_DMb : _typedef(DMb,4,4) bits32 $__uint_DMb;
          commonNaNT_DMb : _struct(DMb,12,4) commonNaNT {
                     sign $flag_DMb @0;
                     high $bits32_DMb @4;
                     low $bits32_DMb @8;
                 }
         __PcommonNaNT__ : _pointer() $__Pvoid__ $commonNaNT_DMb;
             __P__uint__ : _pointer() $__Pvoid__ $bits32_DMb;
                 int32__ : _typedef() int32 $__sint__;
             __P__sint__ : _pointer() $__Pvoid__ $__sint_DMb;
            __sshort_DMb : _basic(DMb,2,2) __sshort;
           __P__sshort__ : _pointer() $__Pvoid__ $__sshort_DMb;
             __cchar_DMb : _basic(DMb,1,1) __cchar;
            __P__cchar__ : _pointer() $__Pvoid__ $__cchar_DMb;
               sbits32__ : _typedef() sbits32 $__sint__;
