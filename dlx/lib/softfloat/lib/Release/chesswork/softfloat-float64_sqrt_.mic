
// File generated by mist version Q-2020.03#7e5ed72dc8#200717, Wed Mar 22 14:21:40 2023
// Copyright 2014-2020 Synopsys, Inc. All rights reserved.
// --mist2 softfloat-float64_sqrt_ -I../../../.. -I../../../../isg -r +f +i dlx


// m761;   next: m29, jump target: m745 (next offset: 48)
000000  4  "01001000"   // (R[2]) = lhi_const_1_B1 (15); 
000001  0  "00000010"   // /
000002  0  "00000000"   // /
000003  0  "00001111"   // /
000004  4  "10011100"   // (R[6]) = _rs_const_6_B1 (R[4]); 
000005  0  "10000110"   // /
000006  0  "00000000"   // /
000007  0  "00010100"   // /
000008  4  "01010100"   // (R[2]) = w32_const_bor_1_B1 (R[2],65535); 
000009  0  "01000010"   // /
000010  0  "11111111"   // /
000011  0  "11111111"   // /
000012  4  "00000000"   // (R[7]) = _ad_1_B1 (R[4],R[2]); 
000013  0  "01000100"   // /
000014  0  "00111000"   // /
000015  0  "00000011"   // /
000016  4  "00010000"   // (R[6]) = _ad_const_4_B1 (R[6]); 
000017  0  "11000110"   // /
000018  0  "00000111"   // /
000019  0  "11111111"   // /
000020  4  "00000000"   // (R[3]) = _or_1_B1 (R[7],R[5]); 
000021  0  "10100111"   // /
000022  0  "00011000"   // /
000023  0  "00001010"   // /
000024  4  "10011100"   // (R[8]) = _rs_const_2_B1 (R[4]); 
000025  0  "10001000"   // /
000026  0  "00000000"   // /
000027  0  "00011111"   // /
000028  4  "01100100"   // (R[9]) = _eq_const_1_B1 (R[6]); 
000029  0  "11001001"   // /
000030  0  "00000111"   // /
000031  0  "11111111"   // /
000032  4  "00001000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (36,SP,SP); 
000033  0  "00100001"   // /
000034  0  "00000000"   // /
000035  0  "00100100"   // /
000036  4  "00100001"   // () = nez_br_const_1_B1 (R[9],512); 
000037  0  "00100000"   // /
000038  0  "00000010"   // /
000039  0  "00000000"   // /
000040  4  "01001000"   // (R[2]) = lhi_const_1_B1 (32767); 
000041  0  "00000010"   // /
000042  0  "01111111"   // /
000043  0  "11111111"   // /
000044  4  "01010100"   // (R[2]) = w32_const_bor_1_B1 (R[2],65535); 
000045  0  "01000010"   // /
000046  0  "11111111"   // /
000047  0  "11111111"   // /

// m29;   next: m876 (next offset: 48)

// m876;   next: m46, jump target: m781 (next offset: 60)
000048  4  "00100001"   // () = nez_br_const_2_B1 (R[8],540); 
000049  0  "00000000"   // /
000050  0  "00000010"   // /
000051  0  "00011100"   // /
000052  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000053  0  "00000000"   // /
000054  0  "00000000"   // /
000055  0  "00000000"   // /
000056  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000057  0  "00000000"   // /
000058  0  "00000000"   // /
000059  0  "00000000"   // /

// m46;   next: m793, jump target: m63 (next offset: 72)
000060  4  "00100000"   // () = nez_br_const_2_B1 (R[6],36); 
000061  0  "11000000"   // /
000062  0  "00000000"   // /
000063  0  "00100100"   // /
000064  4  "10101000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[15],SP,-8); 
000065  0  "00101111"   // /
000066  0  "11111111"   // /
000067  0  "11111000"   // /
000068  4  "10101000"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[2],SP,-4); 
000069  0  "00100010"   // /
000070  0  "11111111"   // /
000071  0  "11111100"   // /

// m793;   next: m59, jump target: m58 (next offset: 84)
000072  4  "00010100"   // () = eqz_br_const_1_B1 (R[3],552); 
000073  0  "01100000"   // /
000074  0  "00000010"   // /
000075  0  "00101000"   // /
000076  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000077  0  "00000000"   // /
000078  0  "00000000"   // /
000079  0  "00000000"   // /
000080  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000081  0  "00000000"   // /
000082  0  "00000000"   // /
000083  0  "00000000"   // /

// m59;   next: m61 (next offset: 88)
000084  4  "01010100"   // R[4] = R[7]; 
000085  0  "11100100"   // /
000086  0  "00000000"   // /
000087  0  "00000000"   // /

// m61;   next: m62 (next offset: 100)
000088  4  "01010100"   // R[8] = R[5]; 
000089  0  "10101000"   // /
000090  0  "00000000"   // /
000091  0  "00000000"   // /
000092  4  "00101000"   // (LR) = jal_const_1_B1 (0); 
000093  0  "00000000"   // /
000094  0  "00000000"   // /
000095  0  "00000000"   // /
000096  4  "01010100"   // R[7] = R[4]; 
000097  0  "10000111"   // /
000098  0  "00000000"   // /
000099  0  "00000000"   // /

// m62 subroutine call;   next: m877 (next offset: 100)

// m877;   next: m71 (next offset: 104)
000100  4  "01010101"   // R[5] = R[8]; 
000101  0  "00000101"   // /
000102  0  "00000000"   // /
000103  0  "00000000"   // /

// m63;   next: m71 (next offset: 104)

// m71;   next: m72 (next offset: 160)
000104  4  "01001000"   // (R[4]) = const_3_B1 (); 
000105  0  "00000100"   // /
000106  0  "00000000"   // /
000107  0  "00010000"   // /
000108  4  "00000000"   // (R[4]) = _or_3_B1 (R[7],R[4]); 
000109  0  "10000111"   // /
000110  0  "00100000"   // /
000111  0  "00001010"   // /
000112  4  "00001000"   // (R[2],MC) = _pl_const_5_B1 (R[6]); 
000113  0  "11000010"   // /
000114  0  "11111100"   // /
000115  0  "00000001"   // /
000116  4  "10011000"   // (R[2]) = _rs_const_4_B1 (R[2]); 
000117  0  "01000010"   // /
000118  0  "00000000"   // /
000119  0  "00000001"   // /
000120  4  "10101000"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[4],SP,-12); 
000121  0  "00100100"   // /
000122  0  "11111111"   // /
000123  0  "11110100"   // /
000124  4  "10101000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000125  0  "00100101"   // /
000126  0  "11111111"   // /
000127  0  "11110000"   // /
000128  4  "00001000"   // (R[2],MC) = _pl_const_6_B1 (R[2]); 
000129  0  "01000010"   // /
000130  0  "00000011"   // /
000131  0  "11111110"   // /
000132  4  "10001000"   // (R[4]) = _ls_const_3_B1 (R[4]); 
000133  0  "10000100"   // /
000134  0  "00000000"   // /
000135  0  "00001011"   // /
000136  4  "10011100"   // (R[5]) = _rs_const_5_B1 (R[5]); 
000137  0  "10100101"   // /
000138  0  "00000000"   // /
000139  0  "00010101"   // /
000140  4  "00000000"   // (R[5]) = _or_1_B1 (R[4],R[5]); 
000141  0  "10000101"   // /
000142  0  "00101000"   // /
000143  0  "00001010"   // /
000144  4  "10101000"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[2],SP,-20); 
000145  0  "00100010"   // /
000146  0  "11111111"   // /
000147  0  "11101100"   // /
000148  4  "10101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[6],SP,-24); 
000149  0  "00100110"   // /
000150  0  "11111111"   // /
000151  0  "11101000"   // /
000152  4  "00101000"   // (LR) = jal_const_1_B1 (0); 
000153  0  "00000000"   // /
000154  0  "00000000"   // /
000155  0  "00000000"   // /
000156  4  "01010100"   // R[4] = R[6]; 
000157  0  "11000100"   // /
000158  0  "00000000"   // /
000159  0  "00000000"   // /

// m72 subroutine call;   next: m854 (next offset: 160)

// m854;   next: m76, jump target: m77 (next offset: 180)
000160  4  "10011100"   // (R[5]) = _rs_const_3_B1 (R[2]); 
000161  0  "01000101"   // /
000162  0  "00000000"   // /
000163  0  "00000001"   // /
000164  4  "00001000"   // (R[5],MC) = _pl_const_4_B1 (R[5]); 
000165  0  "10100101"   // /
000166  0  "00000000"   // /
000167  0  "00000001"   // /
000168  4  "00100000"   // () = nez_br_const_2_B1 (R[5],8); 
000169  0  "10100000"   // /
000170  0  "00000000"   // /
000171  0  "00001000"   // /
000172  4  "01010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000173  0  "00100100"   // /
000174  0  "11111111"   // /
000175  0  "11111100"   // /
000176  4  "10101000"   // (DMb[-28]) = store__pl_rd_res_reg_const_1_B1 (R[5],-28,DMb[-28],SP); 
000177  0  "00100101"   // /
000178  0  "11111111"   // /
000179  0  "11100100"   // /

// m76;   next: m810 (next offset: 184)
000180  4  "10101000"   // (DMb[-28]) = store__pl_rd_res_reg_const_1_B1 (R[4],-28,DMb[-28],SP); 
000181  0  "00100100"   // /
000182  0  "11111111"   // /
000183  0  "11100100"   // /

// m77;   next: m810 (next offset: 184)

// m810;   next: m83, jump target: m82 (next offset: 220)
000184  4  "01010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000185  0  "00100100"   // /
000186  0  "11111111"   // /
000187  0  "11101000"   // /
000188  4  "01010100"   // (R[5]) = const_1_B2 (); 
000189  0  "00000101"   // /
000190  0  "00000000"   // /
000191  0  "00001001"   // /
000192  4  "00010000"   // (R[4]) = _ad_const_3_B1 (R[4]); 
000193  0  "10000100"   // /
000194  0  "00000000"   // /
000195  0  "00000001"   // /
000196  4  "01010000"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000197  0  "00100010"   // /
000198  0  "11111111"   // /
000199  0  "11110000"   // /
000200  4  "01010000"   // (R[6]) = load__pl_rd_res_reg_const_1_B1 (-28,DMb[-28],SP); 
000201  0  "00100110"   // /
000202  0  "11111111"   // /
000203  0  "11100100"   // /
000204  4  "00000000"   // (R[7],MC) = _mi_1_B1 (R[5],R[4]); 
000205  0  "10100100"   // /
000206  0  "00111000"   // /
000207  0  "00011000"   // /
000208  4  "00010100"   // () = eqz_br_const_1_B1 (R[7],32); 
000209  0  "11100000"   // /
000210  0  "00000000"   // /
000211  0  "00100000"   // /
000212  4  "00000000"   // (R[4]) = _ls_1_B1 (R[2],R[7]); 
000213  0  "01000111"   // /
000214  0  "00100000"   // /
000215  0  "00010010"   // /
000216  4  "10001000"   // (R[5]) = _ls_const_2_B1 (R[6]); 
000217  0  "11000101"   // /
000218  0  "00000000"   // /
000219  0  "00000001"   // /

// m83, jump target: m85 (next offset: 248)
000220  4  "00000000"   // (R[8],MC) = _mi_const_1_B1 (R[7]); 
000221  0  "00000111"   // /
000222  0  "01000000"   // /
000223  0  "00011000"   // /
000224  4  "01010000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000225  0  "00100011"   // /
000226  0  "11111111"   // /
000227  0  "11110100"   // /
000228  4  "00010001"   // (R[8]) = _ad_const_2_B1 (R[8]); 
000229  0  "00001000"   // /
000230  0  "00000000"   // /
000231  0  "00011111"   // /
000232  4  "00000000"   // (R[7]) = _ls_1_B1 (R[3],R[7]); 
000233  0  "01100111"   // /
000234  0  "00111000"   // /
000235  0  "00010010"   // /
000236  4  "00000000"   // (R[2]) = _rs_1_B1 (R[2],R[8]); 
000237  0  "01001000"   // /
000238  0  "00010000"   // /
000239  0  "00010111"   // /
000240  4  "00100100"   // () = j_const_1_B1 (8); 
000241  0  "00000000"   // /
000242  0  "00000000"   // /
000243  0  "00001000"   // /
000244  4  "00000000"   // (R[2]) = _or_1_B1 (R[7],R[2]); 
000245  0  "01000111"   // /
000246  0  "00010000"   // /
000247  0  "00001010"   // /

// m82;   next: m85 (next offset: 252)
000248  4  "01010000"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000249  0  "00100010"   // /
000250  0  "11111111"   // /
000251  0  "11110100"   // /

// m85;   next: m86 (next offset: 256)
000252  4  "00000000"   // (PL,PH) = lmuluu_1_B1 (R[6],R[6]); 
000253  0  "11000110"   // /
000254  0  "00000000"   // /
000255  0  "00100011"   // /

// m86 chess_separator_scheduler;   next: m87 (next offset: 256)

// m87;   next: m88 (next offset: 264)
000256  4  "00000000"   // (R[4],MC) = sub_1_B1 (R[4],PL); 
000257  0  "10001100"   // /
000258  0  "00100000"   // /
000259  0  "00011000"   // /
000260  4  "00000000"   // (R[6],MC) = subx_2_B1 (R[2],PH,MC); 
000261  0  "01001101"   // /
000262  0  "00110000"   // /
000263  0  "00011001"   // /

// m88 chess_separator_scheduler;   next: m100 (next offset: 264)

// m100, jump target: m2 (next offset: 276)
000264  4  "00001000"   // (R[2],MC) = _pl_const_3_B1 (R[5]); 
000265  0  "10100010"   // /
000266  0  "11111111"   // /
000267  0  "11111110"   // /
000268  4  "00100100"   // () = j_const_1_B1 (32); 
000269  0  "00000000"   // /
000270  0  "00000000"   // /
000271  0  "00100000"   // /
000272  4  "01001000"   // (R[5]) = const_4_B3 (); 
000273  0  "00000101"   // /
000274  0  "00000000"   // /
000275  0  "00000000"   // /

// m96;   next: m2 (next offset: 304)
000276  4  "01010000" .loop_nesting 1    // (R[3]) = load__pl_rd_res_reg_const_1_B1 (-28,DMb[-28],SP); 
000277  0  "00100011"   // /
000278  0  "11111111"   // /
000279  0  "11100100"   // /
000280  4  "01010100"   // (R[7]) = _or_const_1_B1 (R[2]); 
000281  0  "01000111"   // /
000282  0  "00000000"   // /
000283  0  "00000001"   // /
000284  4  "00001000"   // (R[3],MC) = _pl_const_1_B1 (R[3]); 
000285  0  "01100011"   // /
000286  0  "11111111"   // /
000287  0  "11111111"   // /
000288  4  "00001000"   // (R[2],MC) = _pl_const_3_B1 (R[2]); 
000289  0  "01000010"   // /
000290  0  "11111111"   // /
000291  0  "11111110"   // /
000292  4  "00000000"   // (R[4],MC) = add_1_B1 (R[4],R[7]); 
000293  0  "10000111"   // /
000294  0  "00100000"   // /
000295  0  "00000001"   // /
000296  4  "00000000"   // (R[6],MC) = addx_const_1_B3 (R[6],MC); 
000297  0  "11000000"   // /
000298  0  "00110000"   // /
000299  0  "00000010"   // /
000300  4  "10101000"   // (DMb[-28]) = store__pl_rd_res_reg_const_1_B1 (R[3],-28,DMb[-28],SP); 
000301  0  "00100011"   // /
000302  0  "11111111"   // /
000303  0  "11100100"   // /

// m2;   next: m97 (next offset: 304)

// m97;   next: m102, jump target: m96 (next offset: 320)
000304  4  "00000000"   // (R[7]) = _lt_const_1_B2 (R[6]); 
000305  0  "11000000"   // /
000306  0  "00111000"   // /
000307  0  "00010011"   // /
000308  4  "00100000"   // () = nez_br_const_1_B1 (R[7],-40); 
000309  0  "11100000"   // /
000310  0  "11111111"   // /
000311  0  "11011000"   // /
000312  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000313  0  "00000000"   // /
000314  0  "00000000"   // /
000315  0  "00000000"   // /
000316  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000317  0  "00000000"   // /
000318  0  "00000000"   // /
000319  0  "00000000"   // /

// m102;   next: m103 (next offset: 336)
000320  4  "00001000" .loop_nesting 0    // (R[6],MC) = _pl_const_2_B1 (R[2]); 
000321  0  "01000110"   // /
000322  0  "00000000"   // /
000323  0  "00000010"   // /
000324  4  "10101000"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[4],SP,-12); 
000325  0  "00100100"   // /
000326  0  "11111111"   // /
000327  0  "11110100"   // /
000328  4  "00101000"   // (LR) = jal_const_1_B1 (0); 
000329  0  "00000000"   // /
000330  0  "00000000"   // /
000331  0  "00000000"   // /
000332  4  "10101000"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[6],SP,-4); 
000333  0  "00100110"   // /
000334  0  "11111111"   // /
000335  0  "11111100"   // /

// m103 subroutine call;   next: m104 (next offset: 336)

// m104;   next: m866, jump target: m138 (next offset: 356)
000336  4  "00010000"   // (R[5]) = _ad_const_1_B1 (R[2]); 
000337  0  "01000101"   // /
000338  0  "00000001"   // /
000339  0  "11111111"   // /
000340  4  "01111000"   // (R[4]) = _gt_const_1_B1 (R[5]); 
000341  0  "10100100"   // /
000342  0  "00000000"   // /
000343  0  "00000101"   // /
000344  4  "00100000"   // () = nez_br_const_1_B1 (R[4],156); 
000345  0  "10000000"   // /
000346  0  "00000000"   // /
000347  0  "10011100"   // /
000348  4  "10101000"   // (DMb[-32]) = store__pl_rd_res_reg_const_1_B1 (R[2],-32,DMb[-32],SP); 
000349  0  "00100010"   // /
000350  0  "11111111"   // /
000351  0  "11100000"   // /
000352  4  "01010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000353  0  "00100101"   // /
000354  0  "11111111"   // /
000355  0  "11111100"   // /

// m866;   next: m111, jump target: m112 (next offset: 368)
000356  4  "00100000"   // () = nez_br_const_2_B1 (R[2],12); 
000357  0  "01000000"   // /
000358  0  "00000000"   // /
000359  0  "00001100"   // /
000360  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000361  0  "00000000"   // /
000362  0  "00000000"   // /
000363  0  "00000000"   // /
000364  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000365  0  "00000000"   // /
000366  0  "00000000"   // /
000367  0  "00000000"   // /

// m111;   next: m114 (next offset: 376)
000368  4  "01010100"   // (R[4]) = const_2_B2 (); 
000369  0  "00000100"   // /
000370  0  "00000000"   // /
000371  0  "00000001"   // /
000372  4  "10101000"   // (DMb[-32]) = store__pl_rd_res_reg_const_1_B1 (R[4],-32,DMb[-32],SP); 
000373  0  "00100100"   // /
000374  0  "11111111"   // /
000375  0  "11100000"   // /

// m112;   next: m114 (next offset: 376)

// m114;   next: m115 (next offset: 388)
000376  4  "01010000"   // (R[4]) = load__pl_rd_res_reg_const_1_B1 (-32,DMb[-32],SP); 
000377  0  "00100100"   // /
000378  0  "11111111"   // /
000379  0  "11100000"   // /
000380  4  "01010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000381  0  "00100110"   // /
000382  0  "11111111"   // /
000383  0  "11110100"   // /
000384  4  "00000000"   // (PL,PH) = lmuluu_2_B1 (R[5],R[4]); 
000385  0  "10000101"   // /
000386  0  "00000000"   // /
000387  0  "00100011"   // /

// m115 chess_separator_scheduler;   next: m116 (next offset: 388)

// m116;   next: m117 (next offset: 396)
000388  4  "00000000"   // (R[5],MC) = sub_const_1_B1 (PL); 
000389  0  "00001100"   // /
000390  0  "00101000"   // /
000391  0  "00011000"   // /
000392  4  "00000000"   // (R[7],MC) = subx_2_B1 (R[6],PH,MC); 
000393  0  "11001101"   // /
000394  0  "00111000"   // /
000395  0  "00011001"   // /

// m117 chess_separator_scheduler;   next: m135 (next offset: 396)

// m135, jump target: m3 (next offset: 424)
000396  4  "00000000"   // (PL,PH) = lmuluu_1_B1 (R[4],R[4]); 
000397  0  "10000100"   // /
000398  0  "00000000"   // /
000399  0  "00100011"   // /
000400  4  "01010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000401  0  "00100100"   // /
000402  0  "11111111"   // /
000403  0  "11111100"   // /
000404  4  "00000000"   // (R[6],MC) = sub_const_1_B1 (PL); 
000405  0  "00001100"   // /
000406  0  "00110000"   // /
000407  0  "00011000"   // /
000408  4  "00000000"   // (R[2],MC) = subx_1_B1 (R[5],PH,MC); 
000409  0  "10101101"   // /
000410  0  "00010000"   // /
000411  0  "00011001"   // /
000412  4  "01010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000413  0  "00100101"   // /
000414  0  "11111111"   // /
000415  0  "11101100"   // /
000416  4  "00100100"   // () = j_const_1_B1 (44); 
000417  0  "00000000"   // /
000418  0  "00000000"   // /
000419  0  "00101100"   // /
000420  4  "00000000"   // (R[7],MC) = subx_const_1_B3 (R[7],MC); 
000421  0  "11100000"   // /
000422  0  "00111000"   // /
000423  0  "00011001"   // /

// m131;   next: m3 (next offset: 464)
000424  4  "01010000" .loop_nesting 1    // (R[3]) = load__pl_rd_res_reg_const_1_B1 (-32,DMb[-32],SP); 
000425  0  "00100011"   // /
000426  0  "11111111"   // /
000427  0  "11100000"   // /
000428  4  "00001000"   // (R[8],MC) = _pl_const_1_B1 (R[3]); 
000429  0  "01101000"   // /
000430  0  "11111111"   // /
000431  0  "11111111"   // /
000432  4  "10001001"   // (R[3]) = _ls_const_2_B1 (R[8]); 
000433  0  "00000011"   // /
000434  0  "00000000"   // /
000435  0  "00000001"   // /
000436  4  "10101000"   // (DMb[-32]) = store__pl_rd_res_reg_const_1_B1 (R[8],-32,DMb[-32],SP); 
000437  0  "00101000"   // /
000438  0  "11111111"   // /
000439  0  "11100000"   // /
000440  4  "10011101"   // (R[8]) = _rs_const_2_B1 (R[8]); 
000441  0  "00001000"   // /
000442  0  "00000000"   // /
000443  0  "00011111"   // /
000444  4  "01010100"   // (R[3]) = _or_const_1_B1 (R[3]); 
000445  0  "01100011"   // /
000446  0  "00000000"   // /
000447  0  "00000001"   // /
000448  4  "00000000"   // (R[8]) = _or_1_B1 (R[8],R[4]); 
000449  0  "10001000"   // /
000450  0  "01000000"   // /
000451  0  "00001010"   // /
000452  4  "00000000"   // (R[6],MC) = add_1_B1 (R[6],R[3]); 
000453  0  "01100110"   // /
000454  0  "00110000"   // /
000455  0  "00000001"   // /
000456  4  "00000000"   // (R[2],MC) = addx_1_B1 (R[2],R[8],MC); 
000457  0  "01001000"   // /
000458  0  "00010000"   // /
000459  0  "00000010"   // /
000460  4  "00000000"   // (R[7],MC) = addx_const_1_B3 (R[7],MC); 
000461  0  "11100000"   // /
000462  0  "00111000"   // /
000463  0  "00000010"   // /

// m3;   next: m132 (next offset: 464)

// m132;   next: m820, jump target: m131 (next offset: 480)
000464  4  "00000000"   // (R[3]) = _lt_const_1_B2 (R[7]); 
000465  0  "11100000"   // /
000466  0  "00011000"   // /
000467  0  "00010011"   // /
000468  4  "00100000"   // () = nez_br_const_1_B1 (R[3],-52); 
000469  0  "01100000"   // /
000470  0  "11111111"   // /
000471  0  "11001100"   // /
000472  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000473  0  "00000000"   // /
000474  0  "00000000"   // /
000475  0  "00000000"   // /
000476  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000477  0  "00000000"   // /
000478  0  "00000000"   // /
000479  0  "00000000"   // /

// m820, jump target: m175 (next offset: 508)
000480  4  "00000000" .loop_nesting 0    // (R[4]) = _or_1_B1 (R[7],R[2]); 
000481  0  "01000111"   // /
000482  0  "00100000"   // /
000483  0  "00001010"   // /
000484  4  "00000000"   // (R[6]) = _or_1_B1 (R[4],R[6]); 
000485  0  "10000110"   // /
000486  0  "00110000"   // /
000487  0  "00001010"   // /
000488  4  "01010000"   // (R[4]) = load__pl_rd_res_reg_const_1_B1 (-32,DMb[-32],SP); 
000489  0  "00100100"   // /
000490  0  "11111111"   // /
000491  0  "11100000"   // /
000492  4  "00000000"   // (R[6]) = nez_1_B1 (R[6]); 
000493  0  "11000000"   // /
000494  0  "00110000"   // /
000495  0  "00010101"   // /
000496  4  "00000000"   // (R[4]) = _or_2_B1 (R[4],R[6]); 
000497  0  "10000110"   // /
000498  0  "00100000"   // /
000499  0  "00001010"   // /
000500  4  "00100100"   // () = j_const_1_B1 (8); 
000501  0  "00000000"   // /
000502  0  "00000000"   // /
000503  0  "00001000"   // /
000504  4  "10101000"   // (DMb[-32]) = store__pl_rd_res_reg_const_1_B1 (R[4],-32,DMb[-32],SP); 
000505  0  "00100100"   // /
000506  0  "11111111"   // /
000507  0  "11100000"   // /

// m138;   next: m175 (next offset: 512)
000508  4  "01010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000509  0  "00100101"   // /
000510  0  "11111111"   // /
000511  0  "11101100"   // /

// m175;   next: m174 (next offset: 556)
000512  4  "01010000"   // (R[7]) = load__pl_rd_res_reg_const_1_B1 (-32,DMb[-32],SP); 
000513  0  "00100111"   // /
000514  0  "11111111"   // /
000515  0  "11100000"   // /
000516  4  "01010000"   // (R[6]) = load__pl_rd_res_reg_const_1_B1 (-28,DMb[-28],SP); 
000517  0  "00100110"   // /
000518  0  "11111111"   // /
000519  0  "11100100"   // /
000520  4  "10001000"   // (R[8]) = _ls_const_1_B1 (R[7]); 
000521  0  "11101000"   // /
000522  0  "00000000"   // /
000523  0  "00010110"   // /
000524  4  "10001000"   // (R[4]) = _ls_const_1_B1 (R[6]); 
000525  0  "11000100"   // /
000526  0  "00000000"   // /
000527  0  "00010110"   // /
000528  4  "10011100"   // (R[2]) = _rs_const_1_B1 (R[7]); 
000529  0  "11100010"   // /
000530  0  "00000000"   // /
000531  0  "00001010"   // /
000532  4  "01010000"   // (R[15]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000533  0  "00101111"   // /
000534  0  "11111111"   // /
000535  0  "11111000"   // /
000536  4  "10011100"   // (R[6]) = _rs_const_1_B1 (R[6]); 
000537  0  "11000110"   // /
000538  0  "00000000"   // /
000539  0  "00001010"   // /
000540  4  "00001000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-36,SP,SP); 
000541  0  "00100001"   // /
000542  0  "11111111"   // /
000543  0  "11011100"   // /
000544  4  "00000000"   // (R[7]) = _or_1_B1 (R[4],R[2]); 
000545  0  "01000100"   // /
000546  0  "00111000"   // /
000547  0  "00001010"   // /
000548  4  "00100100"   // () = j_const_1_B1 (0); 
000549  0  "00000000"   // /
000550  0  "00000000"   // /
000551  0  "00000000"   // /
000552  4  "01001000"   // (R[4]) = const_4_B3 (); 
000553  0  "00000100"   // /
000554  0  "00000000"   // /
000555  0  "00000000"   // /

// m174 subroutine call;   next: m176 (next offset: 556)

// m176 (next offset: 556)

// m745;   next: m18, jump target: m16 (next offset: 568)
000556  4  "00100000"   // () = nez_br_const_2_B1 (R[3],88); 
000557  0  "01100000"   // /
000558  0  "00000000"   // /
000559  0  "01011000"   // /
000560  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000561  0  "00000000"   // /
000562  0  "00000000"   // /
000563  0  "00000000"   // /
000564  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000565  0  "00000000"   // /
000566  0  "00000000"   // /
000567  0  "00000000"   // /

// m18;   next: m875 (next offset: 568)

// m875;   next: m25, jump target: m1 (next offset: 580)
000568  4  "00100001"   // () = nez_br_const_2_B1 (R[8],44); 
000569  0  "00000000"   // /
000570  0  "00000000"   // /
000571  0  "00101100"   // /
000572  4  "00001000"   // (R[3]) = const_5_B1 (); 
000573  0  "00000011"   // /
000574  0  "11111111"   // /
000575  0  "11111111"   // /
000576  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000577  0  "00000000"   // /
000578  0  "00000000"   // /
000579  0  "00000000"   // /

// m25 (next offset: 596)
000580  4  "01010100"   // R[2] = R[4]; 
000581  0  "10000010"   // /
000582  0  "00000000"   // /
000583  0  "00000000"   // /
000584  4  "00110001"   // () = __rts_jr_1_B1 (R[15]); 
000585  0  "11100000"   // /
000586  0  "00000000"   // /
000587  0  "00000000"   // /
000588  4  "01010100"   // R[3] = R[5]; 
000589  0  "10100011"   // /
000590  0  "00000000"   // /
000591  0  "00000000"   // /
000592  4  "00001000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-36,SP,SP); 
000593  0  "00100001"   // /
000594  0  "11111111"   // /
000595  0  "11011100"   // /

// m781;   next: m41, jump target: m40 (next offset: 616)
000596  4  "00000000"   // (R[6]) = _or_1_B1 (R[6],R[7]); 
000597  0  "11000111"   // /
000598  0  "00110000"   // /
000599  0  "00001010"   // /
000600  4  "00000000"   // (R[6]) = _or_1_B1 (R[6],R[5]); 
000601  0  "10100110"   // /
000602  0  "00110000"   // /
000603  0  "00001010"   // /
000604  4  "00010100"   // () = eqz_br_const_1_B1 (R[6],56); 
000605  0  "11000000"   // /
000606  0  "00000000"   // /
000607  0  "00111000"   // /
000608  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000609  0  "00000000"   // /
000610  0  "00000000"   // /
000611  0  "00000000"   // /
000612  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000613  0  "00000000"   // /
000614  0  "00000000"   // /
000615  0  "00000000"   // /

// m41;   next: m878 (next offset: 620)
000616  4  "00001000"   // (R[3]) = const_5_B1 (); 
000617  0  "00000011"   // /
000618  0  "11111111"   // /
000619  0  "11111111"   // /

// m878;   next: m1 (next offset: 620)

// m1;   next: m45 (next offset: 620)

// m45 (next offset: 632)
000620  4  "00110001"   // () = __rts_jr_1_B1 (R[15]); 
000621  0  "11100000"   // /
000622  0  "00000000"   // /
000623  0  "00000000"   // /
000624  4  "00001000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-36,SP,SP); 
000625  0  "00100001"   // /
000626  0  "11111111"   // /
000627  0  "11011100"   // /
000628  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000629  0  "00000000"   // /
000630  0  "00000000"   // /
000631  0  "00000000"   // /

// m58 (next offset: 652)
000632  4  "01010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000633  0  "00100101"   // /
000634  0  "11111111"   // /
000635  0  "11111000"   // /
000636  4  "01001000"   // (R[2]) = const_4_B3 (); 
000637  0  "00000010"   // /
000638  0  "00000000"   // /
000639  0  "00000000"   // /
000640  4  "00110000"   // () = __rts_jr_1_B1 (R[5]); 
000641  0  "10100000"   // /
000642  0  "00000000"   // /
000643  0  "00000000"   // /
000644  4  "01001000"   // (R[3]) = const_4_B3 (); 
000645  0  "00000011"   // /
000646  0  "00000000"   // /
000647  0  "00000000"   // /
000648  4  "00001000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-36,SP,SP); 
000649  0  "00100001"   // /
000650  0  "11111111"   // /
000651  0  "11011100"   // /

// m16;   next: m15 (next offset: 668)
000652  4  "01010100"   // R[6] = R[4]; 
000653  0  "10000110"   // /
000654  0  "00000000"   // /
000655  0  "00000000"   // /
000656  4  "01010100"   // R[7] = R[5]; 
000657  0  "10100111"   // /
000658  0  "00000000"   // /
000659  0  "00000000"   // /
000660  4  "00100100"   // () = j_const_1_B1 (0); 
000661  0  "00000000"   // /
000662  0  "00000000"   // /
000663  0  "00000000"   // /
000664  4  "00001000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-36,SP,SP); 
000665  0  "00100001"   // /
000666  0  "11111111"   // /
000667  0  "11011100"   // /

// m15 subroutine call;   next: m17 (next offset: 668)

// m17 (next offset: 668)

// m40 (next offset: /)
000668  4  "01010100"   // R[2] = R[4]; 
000669  0  "10000010"   // /
000670  0  "00000000"   // /
000671  0  "00000000"   // /
000672  4  "00110001"   // () = __rts_jr_1_B1 (R[15]); 
000673  0  "11100000"   // /
000674  0  "00000000"   // /
000675  0  "00000000"   // /
000676  4  "01010100"   // R[3] = R[5]; 
000677  0  "10100011"   // /
000678  0  "00000000"   // /
000679  0  "00000000"   // /
000680  4  "00001000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-36,SP,SP); 
000681  0  "00100001"   // /
000682  0  "11111111"   // /
000683  0  "11011100"   // /

