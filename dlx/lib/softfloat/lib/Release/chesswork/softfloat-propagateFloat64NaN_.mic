
// File generated by mist version Q-2020.03#7e5ed72dc8#200717, Wed Mar 22 14:21:39 2023
// Copyright 2014-2020 Synopsys, Inc. All rights reserved.
// --mist2 softfloat-propagateFloat64NaN_ -I../../../.. -I../../../../isg -r +f +i dlx


// m476;   next: m539, jump target: m60 (next offset: 128)
000000  4  "01001000"   // (R[2]) = lhi_const_1_B1 (7); 
000001  0  "00000010"   // /
000002  0  "00000000"   // /
000003  0  "00000111"   // /
000004  4  "01010100"   // (R[8]) = w32_const_bor_1_B1 (R[2],65535); 
000005  0  "01001000"   // /
000006  0  "11111111"   // /
000007  0  "11111111"   // /
000008  4  "01001000"   // (R[2]) = lhi_const_1_B1 (15); 
000009  0  "00000010"   // /
000010  0  "00000000"   // /
000011  0  "00001111"   // /
000012  4  "00000000"   // (R[12]) = _ad_1_B1 (R[4],R[8]); 
000013  0  "10001000"   // /
000014  0  "01100000"   // /
000015  0  "00000011"   // /
000016  4  "01010100"   // (R[2]) = w32_const_bor_1_B1 (R[2],65535); 
000017  0  "01000010"   // /
000018  0  "11111111"   // /
000019  0  "11111111"   // /
000020  4  "00000000"   // (R[3]) = _ad_1_B1 (R[6],R[8]); 
000021  0  "11001000"   // /
000022  0  "00011000"   // /
000023  0  "00000011"   // /
000024  4  "00000000"   // (R[11]) = _ad_1_B1 (R[6],R[2]); 
000025  0  "01000110"   // /
000026  0  "01011000"   // /
000027  0  "00000011"   // /
000028  4  "00000000"   // (R[8]) = nez_1_B1 (R[3]); 
000029  0  "01100000"   // /
000030  0  "01000000"   // /
000031  0  "00010101"   // /
000032  4  "00000001"   // (R[16]) = nez_1_B1 (R[12]); 
000033  0  "10000000"   // /
000034  0  "10000000"   // /
000035  0  "00010101"   // /
000036  4  "00000000"   // (R[9]) = nez_1_B1 (R[7]); 
000037  0  "11100000"   // /
000038  0  "01001000"   // /
000039  0  "00010101"   // /
000040  4  "00000001"   // (R[12]) = nez_1_B1 (R[11]); 
000041  0  "01100000"   // /
000042  0  "01100000"   // /
000043  0  "00010101"   // /
000044  4  "10011100"   // (R[10]) = _rs_const_1_B1 (R[4]); 
000045  0  "10001010"   // /
000046  0  "00000000"   // /
000047  0  "00010011"   // /
000048  4  "00000001"   // (R[8]) = lor_1_B1 (R[9],R[8]); 
000049  0  "00001001"   // /
000050  0  "01000000"   // /
000051  0  "00001010"   // /
000052  4  "10001000"   // (R[3]) = _ls_const_1_B1 (R[6]); 
000053  0  "11000011"   // /
000054  0  "00000000"   // /
000055  0  "00000001"   // /
000056  4  "01001000"   // (R[17]) = const_1_B1 (); 
000057  0  "00010001"   // /
000058  0  "11111111"   // /
000059  0  "11100000"   // /
000060  4  "00010001"   // (R[11]) = _ad_const_1_B1 (R[10]); 
000061  0  "01001011"   // /
000062  0  "00001111"   // /
000063  0  "11111111"   // /
000064  4  "10011100"   // (R[2]) = _rs_const_1_B1 (R[6]); 
000065  0  "11000010"   // /
000066  0  "00000000"   // /
000067  0  "00010011"   // /
000068  4  "00000001"   // (R[9]) = lor_1_B1 (R[9],R[12]); 
000069  0  "00101100"   // /
000070  0  "01001000"   // /
000071  0  "00001010"   // /
000072  4  "00000000"   // (R[3]) = _ge_1_B1 (R[3],R[17]); 
000073  0  "01110001"   // /
000074  0  "00011000"   // /
000075  0  "00001101"   // /
000076  4  "00010000"   // (R[10]) = _ad_const_1_B1 (R[2]); 
000077  0  "01001010"   // /
000078  0  "00001111"   // /
000079  0  "11111111"   // /
000080  4  "00000000"   // (R[9]) = land_1_B1 (R[3],R[9]); 
000081  0  "01101001"   // /
000082  0  "01001000"   // /
000083  0  "00000011"   // /
000084  4  "01001000"   // (R[14]) = const_2_B1 (); 
000085  0  "00001110"   // /
000086  0  "00000000"   // /
000087  0  "00001000"   // /
000088  4  "01100101"   // (R[10]) = _eq_const_1_B1 (R[10]); 
000089  0  "01001010"   // /
000090  0  "00001111"   // /
000091  0  "11111110"   // /
000092  4  "01010100"   // R[3] = R[7]; 
000093  0  "11100011"   // /
000094  0  "00000000"   // /
000095  0  "00000000"   // /
000096  4  "00000000"   // (R[4]) = _or_1_B1 (R[4],R[14]); 
000097  0  "10001110"   // /
000098  0  "00100000"   // /
000099  0  "00001010"   // /
000100  4  "00000000"   // (R[2]) = _or_1_B1 (R[6],R[14]); 
000101  0  "11001110"   // /
000102  0  "00010000"   // /
000103  0  "00001010"   // /
000104  4  "00000000"   // (R[13]) = nez_1_B1 (R[5]); 
000105  0  "10100000"   // /
000106  0  "01101000"   // /
000107  0  "00010101"   // /
000108  4  "01100101"   // (R[11]) = _eq_const_1_B1 (R[11]); 
000109  0  "01101011"   // /
000110  0  "00001111"   // /
000111  0  "11111110"   // /
000112  4  "00000001"   // (R[7]) = land_1_B1 (R[10],R[8]); 
000113  0  "00001010"   // /
000114  0  "00111000"   // /
000115  0  "00000011"   // /
000116  4  "00100000"   // () = br_nez_const_1_B1 (R[7],56); 
000117  0  "11100000"   // /
000118  0  "00000000"   // /
000119  0  "00111000"   // /
000120  4  "00000001"   // (R[6]) = lor_1_B1 (R[13],R[16]); 
000121  0  "10110000"   // /
000122  0  "00110000"   // /
000123  0  "00001010"   // /
000124  4  "00000000"   // (R[6]) = land_1_B1 (R[11],R[6]); 
000125  0  "11001011"   // /
000126  0  "00110000"   // /
000127  0  "00000011"   // /

// m539;   next: m537, jump target: m65 (next offset: 140)
000128  4  "00100000"   // () = br_nez_const_1_B1 (R[6],32); 
000129  0  "11000000"   // /
000130  0  "00000000"   // /
000131  0  "00100000"   // /
000132  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000133  0  "00000000"   // /
000134  0  "00000000"   // /
000135  0  "00000000"   // /
000136  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000137  0  "00000000"   // /
000138  0  "00000000"   // /
000139  0  "00000000"   // /

// m537;   next: m71, jump target: m70 (next offset: 152)
000140  4  "00100001"   // () = br_nez_const_1_B1 (R[9],12); 
000141  0  "00100000"   // /
000142  0  "00000000"   // /
000143  0  "00001100"   // /
000144  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000145  0  "00000000"   // /
000146  0  "00000000"   // /
000147  0  "00000000"   // /
000148  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000149  0  "00000000"   // /
000150  0  "00000000"   // /
000151  0  "00000000"   // /

// m71;   next: m540 (next offset: 160)
000152  4  "01010100"   // R[2] = R[4]; 
000153  0  "10000010"   // /
000154  0  "00000000"   // /
000155  0  "00000000"   // /
000156  4  "01010100"   // R[3] = R[5]; 
000157  0  "10100011"   // /
000158  0  "00000000"   // /
000159  0  "00000000"   // /

// m70;   next: m540 (next offset: 160)

// m540;   next: m541 (next offset: 168)
000160  4  "01010100"   // R[4] = R[2]; 
000161  0  "01000100"   // /
000162  0  "00000000"   // /
000163  0  "00000000"   // /
000164  4  "01010100"   // R[5] = R[3]; 
000165  0  "01100101"   // /
000166  0  "00000000"   // /
000167  0  "00000000"   // /

// m65;   next: m541 (next offset: 168)

// m541 (next offset: 180)
000168  4  "00110001"   // () = __rts_jr_1_B1 (R[15]); 
000169  0  "11100000"   // /
000170  0  "00000000"   // /
000171  0  "00000000"   // /
000172  4  "01010100"   // R[3] = R[5]; 
000173  0  "10100011"   // /
000174  0  "00000000"   // /
000175  0  "00000000"   // /
000176  4  "01010100"   // R[2] = R[4]; 
000177  0  "10000010"   // /
000178  0  "00000000"   // /
000179  0  "00000000"   // /

// m60;   next: m76 (next offset: 180)

// m76 (next offset: /)
000180  4  "00110001"   // () = __rts_jr_1_B1 (R[15]); 
000181  0  "11100000"   // /
000182  0  "00000000"   // /
000183  0  "00000000"   // /
000184  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000185  0  "00000000"   // /
000186  0  "00000000"   // /
000187  0  "00000000"   // /
000188  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000189  0  "00000000"   // /
000190  0  "00000000"   // /
000191  0  "00000000"   // /

