
// File generated by mist version Q-2020.03#7e5ed72dc8#200717, Wed Mar 22 14:21:39 2023
// Copyright 2014-2020 Synopsys, Inc. All rights reserved.
// --mist2 softfloat-normalizeRoundAndPackFloat64_ -I../../../.. -I../../../../isg -r +f +i dlx


// m544;   next: m6, jump target: m7 (next offset: 16)
000000  4  "00001000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_2_B1 (12,SP,SP); 
000001  0  "00100001"   // /
000002  0  "00000000"   // /
000003  0  "00001100"   // /
000004  4  "00100000"   // () = nez_br_const_2_B1 (R[6],20); 
000005  0  "11000000"   // /
000006  0  "00000000"   // /
000007  0  "00010100"   // /
000008  4  "10101000"   // (DMb[-8]) = store__pl_rd_res_reg_const_1_B1 (R[6],-8,DMb[-8],SP); 
000009  0  "00100110"   // /
000010  0  "11111111"   // /
000011  0  "11111000"   // /
000012  4  "10101000"   // (DMb[-4]) = store__pl_rd_res_reg_const_1_B1 (R[7],-4,DMb[-4],SP); 
000013  0  "00100111"   // /
000014  0  "11111111"   // /
000015  0  "11111100"   // /

// m6;   next: m9 (next offset: 32)
000016  4  "01010000"   // (R[6]) = load__pl_rd_res_reg_const_1_B1 (-4,DMb[-4],SP); 
000017  0  "00100110"   // /
000018  0  "11111111"   // /
000019  0  "11111100"   // /
000020  4  "10101000"   // (DMb[-4]) = store_const__pl_rd_res_reg_const_1_B1 (-4,DMb[-4],SP); 
000021  0  "00100000"   // /
000022  0  "11111111"   // /
000023  0  "11111100"   // /
000024  4  "00001000"   // (R[5],MC) = _pl_const_2_B1 (R[5]); 
000025  0  "10100101"   // /
000026  0  "11111111"   // /
000027  0  "11100000"   // /
000028  4  "10101000"   // (DMb[-8]) = store__pl_rd_res_reg_const_1_B1 (R[6],-8,DMb[-8],SP); 
000029  0  "00100110"   // /
000030  0  "11111111"   // /
000031  0  "11111000"   // /

// m7;   next: m9 (next offset: 32)

// m9;   next: m501, jump target: m487 (next offset: 64)
000032  4  "01010000"   // (R[7]) = load__pl_rd_res_reg_const_1_B1 (-8,DMb[-8],SP); 
000033  0  "00100111"   // /
000034  0  "11111111"   // /
000035  0  "11111000"   // /
000036  4  "01010000"   // (R[6]) = load__pl_rd_res_reg_const_1_B1 (-4,DMb[-4],SP); 
000037  0  "00100110"   // /
000038  0  "11111111"   // /
000039  0  "11111100"   // /
000040  4  "00000000"   // (R[8]) = clb_1_B1 (R[7]); 
000041  0  "11100000"   // /
000042  0  "01000000"   // /
000043  0  "00100100"   // /
000044  4  "00001001"   // (R[2],MC) = _pl_const_1_B1 (R[8]); 
000045  0  "00000010"   // /
000046  0  "11111111"   // /
000047  0  "11110101"   // /
000048  4  "00000000"   // (R[9]) = _ge_const_1_B2 (R[2]); 
000049  0  "01000000"   // /
000050  0  "01001000"   // /
000051  0  "00001100"   // /
000052  4  "00100001"   // () = nez_br_const_1_B1 (R[9],176); 
000053  0  "00100000"   // /
000054  0  "00000000"   // /
000055  0  "10110000"   // /
000056  4  "00000000"   // (R[8],MC) = _mi_const_1_B1 (R[2]); 
000057  0  "00000010"   // /
000058  0  "01000000"   // /
000059  0  "00011000"   // /
000060  4  "00010001"   // (R[3]) = _ad_const_1_B1 (R[8]); 
000061  0  "00000011"   // /
000062  0  "00000000"   // /
000063  0  "00011111"   // /

// m501;   next: m26, jump target: m24 (next offset: 76)
000064  4  "00010101"   // () = eqz_br_const_1_B1 (R[8],144); 
000065  0  "00000000"   // /
000066  0  "00000000"   // /
000067  0  "10010000"   // /
000068  4  "00000000"   // (R[9],MC) = _mi_const_1_B1 (R[8]); 
000069  0  "00001000"   // /
000070  0  "01001000"   // /
000071  0  "00011000"   // /
000072  4  "00010001"   // (R[10]) = _ad_const_1_B1 (R[9]); 
000073  0  "00101010"   // /
000074  0  "00000000"   // /
000075  0  "00011111"   // /

// m26;   next: m31, jump target: m29 (next offset: 92)
000076  4  "10001101"   // (R[11]) = _lt_const_2_B1 (R[8]); 
000077  0  "00001011"   // /
000078  0  "00000000"   // /
000079  0  "00100000"   // /
000080  4  "00100001"   // () = nez_br_const_1_B1 (R[11],92); 
000081  0  "01100000"   // /
000082  0  "00000000"   // /
000083  0  "01011100"   // /
000084  4  "00000000"   // (R[9]) = _ls_1_B1 (R[7],R[10]); 
000085  0  "11101010"   // /
000086  0  "01001000"   // /
000087  0  "00010010"   // /
000088  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000089  0  "00000000"   // /
000090  0  "00000000"   // /
000091  0  "00000000"   // /

// m31;   next: m36, jump target: m519 (next offset: 112)
000092  4  "01100101"   // (R[12]) = _eq_const_2_B1 (R[8]); 
000093  0  "00001100"   // /
000094  0  "00000000"   // /
000095  0  "00100000"   // /
000096  4  "01001000"   // (R[11]) = const_1_B3 (); 
000097  0  "00001011"   // /
000098  0  "00000000"   // /
000099  0  "00000000"   // /
000100  4  "00100001"   // () = nez_br_const_1_B1 (R[12],92); 
000101  0  "10000000"   // /
000102  0  "00000000"   // /
000103  0  "01011100"   // /
000104  4  "01010100"   // R[10] = R[7]; 
000105  0  "11101010"   // /
000106  0  "00000000"   // /
000107  0  "00000000"   // /
000108  4  "01001000"   // (R[7]) = const_1_B3 (); 
000109  0  "00000111"   // /
000110  0  "00000000"   // /
000111  0  "00000000"   // /

// m36;   next: m41, jump target: m39 (next offset: 128)
000112  4  "10001101"   // (R[11]) = _lt_const_1_B1 (R[8]); 
000113  0  "00001011"   // /
000114  0  "00000000"   // /
000115  0  "01000000"   // /
000116  4  "00100001"   // () = nez_br_const_1_B1 (R[11],40); 
000117  0  "01100000"   // /
000118  0  "00000000"   // /
000119  0  "00101000"   // /
000120  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000121  0  "00000000"   // /
000122  0  "00000000"   // /
000123  0  "00000000"   // /
000124  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000125  0  "00000000"   // /
000126  0  "00000000"   // /
000127  0  "00000000"   // /

// m41;   next: m512, jump target: m44 (next offset: 144)
000128  4  "01100101"   // (R[8]) = _eq_const_1_B1 (R[8]); 
000129  0  "00001000"   // /
000130  0  "00000000"   // /
000131  0  "01000000"   // /
000132  4  "00100001"   // () = nez_br_const_1_B1 (R[8],8); 
000133  0  "00000000"   // /
000134  0  "00000000"   // /
000135  0  "00001000"   // /
000136  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000137  0  "00000000"   // /
000138  0  "00000000"   // /
000139  0  "00000000"   // /
000140  4  "00000000" .swstall "delay_slot"   // () = vd_nop_ID (); 
000141  0  "00000000"   // /
000142  0  "00000000"   // /
000143  0  "00000000"   // /

// m512;   next: m550 (next offset: 148)
000144  4  "00000001"   // (R[10]) = nez_1_B1 (R[10]); 
000145  0  "01000000"   // /
000146  0  "01010000"   // /
000147  0  "00010101"   // /

// m44;   next: m550 (next offset: 148)

// m550, jump target: m519 (next offset: 164)
000148  4  "01010100"   // R[11] = R[6]; 
000149  0  "11001011"   // /
000150  0  "00000000"   // /
000151  0  "00000000"   // /
000152  4  "01010101"   // R[6] = R[10]; 
000153  0  "01000110"   // /
000154  0  "00000000"   // /
000155  0  "00000000"   // /
000156  4  "00100100"   // () = j_const_1_B1 (40); 
000157  0  "00000000"   // /
000158  0  "00000000"   // /
000159  0  "00101000"   // /
000160  4  "01001000"   // (R[10]) = const_1_B3 (); 
000161  0  "00001010"   // /
000162  0  "00000000"   // /
000163  0  "00000000"   // /

// m39, jump target: m519 (next offset: 180)
000164  4  "00000001"   // (R[10]) = _rs_1_B1 (R[10],R[3]); 
000165  0  "01000011"   // /
000166  0  "01010000"   // /
000167  0  "00010111"   // /
000168  4  "01010100"   // R[11] = R[6]; 
000169  0  "11001011"   // /
000170  0  "00000000"   // /
000171  0  "00000000"   // /
000172  4  "00100100"   // () = j_const_1_B1 (24); 
000173  0  "00000000"   // /
000174  0  "00000000"   // /
000175  0  "00011000"   // /
000176  4  "01010101"   // R[6] = R[9]; 
000177  0  "00100110"   // /
000178  0  "00000000"   // /
000179  0  "00000000"   // /

// m29;   next: m519 (next offset: 200)
000180  4  "00000000"   // (R[3]) = _rs_1_B1 (R[6],R[8]); 
000181  0  "11001000"   // /
000182  0  "00011000"   // /
000183  0  "00010111"   // /
000184  4  "00000000"   // (R[6]) = _ls_1_B1 (R[6],R[10]); 
000185  0  "11001010"   // /
000186  0  "00110000"   // /
000187  0  "00010010"   // /
000188  4  "00000000"   // (R[10]) = _or_2_B1 (R[9],R[3]); 
000189  0  "01101001"   // /
000190  0  "01010000"   // /
000191  0  "00001010"   // /
000192  4  "00000000"   // (R[7]) = _rs_1_B1 (R[7],R[8]); 
000193  0  "11101000"   // /
000194  0  "00111000"   // /
000195  0  "00010111"   // /
000196  4  "01001000"   // (R[11]) = const_1_B3 (); 
000197  0  "00001011"   // /
000198  0  "00000000"   // /
000199  0  "00000000"   // /

// m519, jump target: m54 (next offset: 216)
000200  4  "00000001"   // (R[8]) = nez_1_B1 (R[11]); 
000201  0  "01100000"   // /
000202  0  "01000000"   // /
000203  0  "00010101"   // /
000204  4  "00000000"   // (R[8]) = _or_1_B1 (R[6],R[8]); 
000205  0  "11001000"   // /
000206  0  "01000000"   // /
000207  0  "00001010"   // /
000208  4  "00100100"   // () = j_const_1_B1 (8); 
000209  0  "00000000"   // /
000210  0  "00000000"   // /
000211  0  "00001000"   // /
000212  4  "01010101"   // R[6] = R[10]; 
000213  0  "01000110"   // /
000214  0  "00000000"   // /
000215  0  "00000000"   // /

// m24;   next: m54 (next offset: 220)
000216  4  "01001000"   // (R[8]) = const_1_B3 (); 
000217  0  "00001000"   // /
000218  0  "00000000"   // /
000219  0  "00000000"   // /

// m54, jump target: m58 (next offset: 236)
000220  4  "10101000"   // (DMb[-4]) = store__pl_rd_res_reg_const_1_B1 (R[6],-4,DMb[-4],SP); 
000221  0  "00100110"   // /
000222  0  "11111111"   // /
000223  0  "11111100"   // /
000224  4  "10101000"   // (DMb[-8]) = store__pl_rd_res_reg_const_1_B1 (R[7],-8,DMb[-8],SP); 
000225  0  "00100111"   // /
000226  0  "11111111"   // /
000227  0  "11111000"   // /
000228  4  "00100100"   // () = j_const_1_B1 (36); 
000229  0  "00000000"   // /
000230  0  "00000000"   // /
000231  0  "00100100"   // /
000232  4  "10101000"   // (DMb[-12]) = store__pl_rd_res_reg_const_1_B1 (R[8],-12,DMb[-12],SP); 
000233  0  "00101000"   // /
000234  0  "11111111"   // /
000235  0  "11110100"   // /

// m487;   next: m17, jump target: m16 (next offset: 252)
000236  4  "00000000"   // (R[8]) = _ls_1_B1 (R[6],R[2]); 
000237  0  "11000010"   // /
000238  0  "01000000"   // /
000239  0  "00010010"   // /
000240  4  "00010100"   // () = eqz_br_const_1_B1 (R[2],16); 
000241  0  "01000000"   // /
000242  0  "00000000"   // /
000243  0  "00010000"   // /
000244  4  "10101000"   // (DMb[-12]) = store_const__pl_rd_res_reg_const_1_B1 (-12,DMb[-12],SP); 
000245  0  "00100000"   // /
000246  0  "11111111"   // /
000247  0  "11110100"   // /
000248  4  "10101000"   // (DMb[-4]) = store__pl_rd_res_reg_const_1_B1 (R[8],-4,DMb[-4],SP); 
000249  0  "00101000"   // /
000250  0  "11111111"   // /
000251  0  "11111100"   // /

// m17;   next: m19 (next offset: 264)
000252  4  "00000000"   // (R[7]) = _ls_1_B1 (R[7],R[2]); 
000253  0  "11100010"   // /
000254  0  "00111000"   // /
000255  0  "00010010"   // /
000256  4  "00000000"   // (R[6]) = _rs_1_B1 (R[6],R[3]); 
000257  0  "11000011"   // /
000258  0  "00110000"   // /
000259  0  "00010111"   // /
000260  4  "00000000"   // (R[7]) = _or_2_B1 (R[7],R[6]); 
000261  0  "11000111"   // /
000262  0  "00111000"   // /
000263  0  "00001010"   // /

// m16;   next: m19 (next offset: 264)

// m19;   next: m58 (next offset: 268)
000264  4  "10101000"   // (DMb[-8]) = store__pl_rd_res_reg_const_1_B1 (R[7],-8,DMb[-8],SP); 
000265  0  "00100111"   // /
000266  0  "11111111"   // /
000267  0  "11111000"   // /

// m58;   next: m57 (next offset: 292)
000268  4  "01010000"   // (R[6]) = load__pl_rd_res_reg_const_1_B1 (-8,DMb[-8],SP); 
000269  0  "00100110"   // /
000270  0  "11111111"   // /
000271  0  "11111000"   // /
000272  4  "01010000"   // (R[7]) = load__pl_rd_res_reg_const_1_B1 (-4,DMb[-4],SP); 
000273  0  "00100111"   // /
000274  0  "11111111"   // /
000275  0  "11111100"   // /
000276  4  "01010000"   // (R[8]) = load__pl_rd_res_reg_const_1_B1 (-12,DMb[-12],SP); 
000277  0  "00101000"   // /
000278  0  "11111111"   // /
000279  0  "11110100"   // /
000280  4  "00000000"   // (R[5],MC) = _mi_1_B1 (R[5],R[2]); 
000281  0  "10100010"   // /
000282  0  "00101000"   // /
000283  0  "00011000"   // /
000284  4  "00100100"   // () = j_const_1_B1 (0); 
000285  0  "00000000"   // /
000286  0  "00000000"   // /
000287  0  "00000000"   // /
000288  4  "00001000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (-12,SP,SP); 
000289  0  "00100001"   // /
000290  0  "11111111"   // /
000291  0  "11110100"   // /

// m57 subroutine call;   next: m59 (next offset: 292)

// m59 (next offset: /)

