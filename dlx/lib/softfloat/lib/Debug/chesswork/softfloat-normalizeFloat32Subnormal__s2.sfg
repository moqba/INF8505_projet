
// File generated by mist version Q-2020.03#7e5ed72dc8#200717, Wed Mar 22 14:21:41 2023
// Copyright 2014-2020 Synopsys, Inc. All rights reserved.
// --mist2 softfloat-normalizeFloat32Subnormal_ -I../../../.. -I../../../../isg -r +f +i -s dlx

[
    0 : void_normalizeFloat32Subnormal___uint_R__sint_R__uint typ=w08 bnd=i stl=PMb
   21 : __sp typ=w32 bnd=b stl=SP
   25 : aSig typ=w08 val=-4T0 bnd=a sz=4 algn=4 stl=DMb tref=bits32_DMb
   26 : shiftCount typ=w08 val=-8T0 bnd=a sz=4 algn=4 stl=DMb tref=int8_DMb
   31 : __la typ=w32 bnd=p tref=w32__
   32 : __arg_aSig typ=w32 bnd=p tref=bits32__
   33 : zExpPtr typ=w32 bnd=p tref=int16__
   34 : zSigPtr typ=w32 bnd=p tref=bits32__
   35 : __ct_8s0 typ=w32 val=8s0 bnd=m
   39 : __ct_m4T0 typ=w32 val=-4T0 bnd=m
   43 : __ct_m8T0 typ=w32 val=-8T0 bnd=m
   49 : __fch_aSig typ=w32 bnd=m
   50 : __tmp typ=w32 bnd=m
   54 : __tmp typ=w32 bnd=m
   56 : __fch_shiftCount typ=w32 bnd=m
   58 : __ct_1 typ=w32 val=1f bnd=m
   62 : __ct_m8S0 typ=w32 val=-8S0 bnd=m
   70 : __seff typ=any bnd=m
   71 : __seff typ=any bnd=m
   72 : __seff typ=any bnd=m
   73 : __seff typ=any bnd=m
]
Fvoid_normalizeFloat32Subnormal___uint_R__sint_R__uint {
    #3 off=0 nxt=6
    (__sp.20 var=21) source ()  <34>;
    (aSig.24 var=25) source ()  <38>;
    (shiftCount.25 var=26) source ()  <39>;
    (__la.30 var=31 stl=R off=15) inp ()  <44>;
    (__arg_aSig.33 var=32 stl=R off=4) inp ()  <47>;
    (zExpPtr.36 var=33 stl=R off=5) inp ()  <50>;
    (zSigPtr.39 var=34 stl=R off=6) inp ()  <53>;
    (__ct_8s0.114 var=35) const_inp ()  <163>;
    (__ct_m4T0.115 var=39) const_inp ()  <164>;
    <34> {
      (__sp.47 var=21 __seff.133 var=73 stl=aluM) _pl_rd_res_reg_const_wr_res_reg_2_B1 (__ct_8s0.114 __sp.20 __sp.20)  <181>;
      (__seff.168 var=73 stl=MC off=0) MC_2_dr_move_aluM_2_any (__seff.133)  <249>;
    } stp=0;
    <35> {
      (aSig.62 var=25) _pl_rd_res_reg_const_store_1_B1 (__arg_aSig.154 __ct_m4T0.115 aSig.24 __sp.47)  <182>;
      (__arg_aSig.154 var=32 stl=dmw_wr) dmw_wr_2_dr_move_R_1_w32 (__arg_aSig.33)  <235>;
    } stp=16;
    <59> {
      () vd_nop_ID ()  <276>;
    } stp=4;
    <60> {
      () vd_nop_ID ()  <277>;
    } stp=8;
    <61> {
      () vd_nop_ID ()  <278>;
    } stp=12;
    call {
        () chess_separator_scheduler ()  <78>;
    } #6 off=20 nxt=7
    #7 off=20 nxt=10
    <33> {
      (__fch_aSig.65 var=49 stl=dmw_rd) load__pl_rd_res_reg_const_1_B1 (__ct_m4T0.115 aSig.62 __sp.47)  <180>;
      (__fch_aSig.156 var=49 stl=R off=6) R_4_dr_move_dmw_rd_3_w32 (__fch_aSig.65)  <237>;
    } stp=0;
    call {
        () chess_separator_scheduler ()  <83>;
    } #10 off=24 nxt=11
    #11 off=24 nxt=12
    <32> {
      (__tmp.67 var=50 stl=aluC) clb_1_B1 (__fch_aSig.155)  <179>;
      (__fch_aSig.155 var=49 stl=aluA) aluA_2_dr_move_R_1_w32 (__fch_aSig.156)  <236>;
      (__tmp.158 var=50 stl=R off=5) R_4_dr_move_aluC_2_w32 (__tmp.67)  <239>;
    } stp=12;
    <64> {
      () vd_nop_ID ()  <281>;
    } stp=0;
    <65> {
      () vd_nop_ID ()  <282>;
    } stp=4;
    <66> {
      () vd_nop_ID ()  <283>;
    } stp=8;
    call {
        () chess_separator_scheduler ()  <86>;
    } #12 off=40 nxt=13
    #13 off=40 nxt=14
    (__ct_m8T0.116 var=43) const_inp ()  <165>;
    <30> {
      (__tmp.71 var=54 stl=aluC __seff.128 var=72 stl=aluM) _pl_const_1_B1 (__tmp.157)  <177>;
      (__tmp.157 var=50 stl=aluA) aluA_2_dr_move_R_1_w32 (__tmp.158)  <238>;
      (__seff.159 var=72 stl=MC off=0) MC_2_dr_move_aluM_2_any (__seff.128)  <240>;
      (__tmp.161 var=54 stl=R off=5) R_4_dr_move_aluC_2_w32 (__tmp.71)  <242>;
    } stp=12;
    <31> {
      (shiftCount.73 var=26) _pl_rd_res_reg_const_store_1_B1 (__tmp.160 __ct_m8T0.116 shiftCount.25 __sp.47)  <178>;
      (__tmp.160 var=54 stl=dmw_wr) dmw_wr_2_dr_move_R_1_w32 (__tmp.161)  <241>;
    } stp=28;
    <70> {
      () vd_nop_ID ()  <287>;
    } stp=0;
    <71> {
      () vd_nop_ID ()  <288>;
    } stp=4;
    <72> {
      () vd_nop_ID ()  <289>;
    } stp=8;
    <73> {
      () vd_nop_ID ()  <290>;
    } stp=16;
    <74> {
      () vd_nop_ID ()  <291>;
    } stp=20;
    <75> {
      () vd_nop_ID ()  <292>;
    } stp=24;
    call {
        () chess_separator_scheduler ()  <91>;
    } #14 off=72 nxt=15
    #15 off=72 nxt=16
    <28> {
      (__fch_shiftCount.75 var=56 stl=dmw_rd) load__pl_rd_res_reg_const_1_B1 (__ct_m8T0.116 shiftCount.73 __sp.47)  <175>;
      (__fch_shiftCount.163 var=56 stl=R off=5) R_4_dr_move_dmw_rd_3_w32 (__fch_shiftCount.75)  <244>;
    } stp=0;
    <29> {
      (zSigPtr.76 var=34 stl=shC) _ls_1_B1 (__fch_aSig.166 __fch_shiftCount.165)  <176>;
      (zSigPtr.153 var=34 stl=R off=6) R_4_dr_move_shC_2_w32 (zSigPtr.76)  <234>;
      (__fch_shiftCount.165 var=56 stl=shB) shB_2_dr_move_R_1_w32 (__fch_shiftCount.163)  <246>;
      (__fch_aSig.166 var=49 stl=shA) shA_2_dr_move_R_1_w32 (__fch_aSig.156)  <247>;
    } stp=16;
    <67> {
      () vd_nop_ID ()  <284>;
    } stp=4;
    <68> {
      () vd_nop_ID ()  <285>;
    } stp=8;
    <69> {
      () vd_nop_ID ()  <286>;
    } stp=12;
    call {
        () chess_separator_scheduler ()  <95>;
    } #16 off=92 nxt=17
    #17 off=92 nxt=18
    <27> {
      (zExpPtr.80 var=33 stl=aluC __seff.124 var=71 stl=aluM) _mi_1_B1 (__ct_1.170 __fch_shiftCount.162)  <174>;
      (zExpPtr.152 var=33 stl=R off=5) R_4_dr_move_aluC_2_w32 (zExpPtr.80)  <233>;
      (__fch_shiftCount.162 var=56 stl=aluB) aluB_2_dr_move_R_1_w32 (__fch_shiftCount.163)  <243>;
      (__seff.164 var=71 stl=MC off=0) MC_2_dr_move_aluM_2_any (__seff.124)  <245>;
      (__ct_1.170 var=58 stl=aluA) aluA_2_dr_move_R_1_w32 (__ct_1.171)  <251>;
    } stp=16;
    <55> {
      (__ct_1.173 var=58 stl=__pS2_w) const_1_B2 ()  <226>;
      (__ct_1.171 var=58 stl=R off=4) R_4_dr_move___pS2_w_1_MC_2_w32_B1 (__ct_1.173)  <252>;
    } stp=0;
    <56> {
      () vd_nop_ID ()  <273>;
    } stp=4;
    <57> {
      () vd_nop_ID ()  <274>;
    } stp=8;
    <58> {
      () vd_nop_ID ()  <275>;
    } stp=12;
    call {
        () chess_separator_scheduler ()  <100>;
    } #18 off=112 nxt=20
    #20 off=112 nxt=-2
    () out (zExpPtr.152)  <108>;
    () out (zSigPtr.153)  <110>;
    () sink (__sp.86)  <116>;
    () sink (aSig.62)  <120>;
    () sink (shiftCount.73)  <121>;
    (__ct_m8S0.117 var=62) const_inp ()  <166>;
    <24> {
      (__sp.86 var=21 __seff.121 var=70 stl=aluM) _pl_rd_res_reg_const_wr_res_reg_1_B1 (__ct_m8S0.117 __sp.47 __sp.47)  <171>;
      (__seff.169 var=70 stl=MC off=0) MC_2_dr_move_aluM_2_any (__seff.121)  <250>;
    } stp=0;
    <25> {
      () __rts_jr_1_B1 (__la.167)  <172>;
      (__la.167 var=31 stl=trgt) trgt_2_dr_move_R_1_w32 (__la.30)  <248>;
    } stp=4;
    <62> {
      () vd_nop_ID ()  <279>;
    } stp=8;
    <63> {
      () vd_nop_ID ()  <280>;
    } stp=12;
} #0
0 : '../softfloat/softfloat.c';
----------
0 : (0,100:0,0);
3 : (0,101:28,0);
6 : (0,105:17,4);
7 : (0,105:38,5);
10 : (0,105:17,6);
11 : (0,105:17,8);
12 : (0,105:17,8);
13 : (0,105:15,11);
14 : (0,105:15,11);
15 : (0,106:12,12);
16 : (0,106:12,12);
17 : (0,107:12,13);
18 : (0,107:12,13);
20 : (0,109:0,13);
----------
78 : (0,105:17,4);
83 : (0,105:17,6);
86 : (0,105:17,8);
91 : (0,105:15,11);
95 : (0,106:12,12);
100 : (0,107:12,13);
171 : (0,109:0,0) (0,101:35,0) (0,109:0,13);
172 : (0,109:0,13);
174 : (0,107:16,12);
175 : (0,106:20,11) (0,103:9,0) (0,101:35,0);
176 : (0,106:18,11);
177 : (0,105:45,10);
178 : (0,103:9,0) (0,101:35,0) (0,105:4,10);
179 : (0,105:17,7);
180 : (0,105:38,5) (0,101:35,0);
181 : (0,101:1,0);
182 : (0,101:35,0) (0,101:28,0);
226 : (0,107:14,0);

