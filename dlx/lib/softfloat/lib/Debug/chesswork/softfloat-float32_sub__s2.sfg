
// File generated by mist version Q-2020.03#7e5ed72dc8#200717, Wed Mar 22 14:21:41 2023
// Copyright 2014-2020 Synopsys, Inc. All rights reserved.
// --mist2 softfloat-float32_sub_ -I../../../.. -I../../../../isg -r +f +i -s dlx

[
    0 : float32_sub typ=w08 bnd=e stl=PMb
   16 : __vola typ=w08 bnd=b stl=PMb
   19 : __extPMb typ=w08 bnd=b stl=PMb
   20 : __extDMb typ=w08 bnd=b stl=DMb
   21 : __sp typ=w32 bnd=b stl=SP
   25 : b typ=w08 val=-8T0 bnd=a sz=4 algn=4 stl=DMb tref=float32_DMb
   26 : a typ=w08 val=-12T0 bnd=a sz=4 algn=4 stl=DMb tref=float32_DMb
   27 : aSign typ=w08 val=-16T0 bnd=a sz=4 algn=4 stl=DMb tref=flag_DMb
   28 : bSign typ=w08 val=-20T0 bnd=a sz=4 algn=4 stl=DMb tref=flag_DMb
   29 : __extPMb_void typ=w08 bnd=b stl=PMb
   30 : __extDMb_void typ=w08 bnd=b stl=DMb
   35 : __la typ=w32 bnd=p tref=w32__
   37 : __arg_a typ=w32 bnd=p tref=float32__
   38 : __arg_b typ=w32 bnd=p tref=float32__
   39 : __ct_16s0 typ=w32 val=20s0 bnd=m
   43 : __ct_m4T0 typ=w32 val=-8T0 bnd=m
   47 : __ct_m8T0 typ=w32 val=-12T0 bnd=m
   51 : __ct_m12T0 typ=w32 val=-16T0 bnd=m
   55 : __ct_m16T0 typ=w32 val=-20T0 bnd=m
   64 : __fch_a typ=w32 bnd=m
   67 : __tmp typ=w32 bnd=m
   69 : __fch_b typ=w32 bnd=m
   72 : __tmp typ=w32 bnd=m
   74 : __fch_aSign typ=w32 bnd=m
   75 : __fch_bSign typ=w32 bnd=m
   76 : __tmp typ=bool bnd=m
   82 : __uint_subFloat32Sigs___uint___uint___sint typ=int26 val=0r bnd=m
   83 : __link typ=w32 bnd=m
   84 : __tmp typ=w32 bnd=m
   85 : __ct_m16S0 typ=w32 val=-20S0 bnd=m
   93 : __uint_addFloat32Sigs___uint___uint___sint typ=int26 val=0r bnd=m
   94 : __link typ=w32 bnd=m
   95 : __tmp typ=w32 bnd=m
  111 : __either typ=bool bnd=m
  112 : __trgt typ=int16 val=40j bnd=m
  113 : __seff typ=any bnd=m
  114 : __seff typ=any bnd=m
  115 : __seff typ=any bnd=m
  117 : __stack_offs_m4 typ=any val=-4o0 bnd=m
]
Ffloat32_sub {
    #3 off=0 nxt=4
    (__vola.15 var=16) source ()  <29>;
    (__extPMb.18 var=19) source ()  <32>;
    (__extDMb.19 var=20) source ()  <33>;
    (__sp.20 var=21) source ()  <34>;
    (b.24 var=25) source ()  <38>;
    (a.25 var=26) source ()  <39>;
    (aSign.26 var=27) source ()  <40>;
    (bSign.27 var=28) source ()  <41>;
    (__extPMb_void.28 var=29) source ()  <42>;
    (__extDMb_void.29 var=30) source ()  <43>;
    (__la.34 var=35 stl=R off=15) inp ()  <48>;
    (__arg_a.38 var=37 stl=R off=4) inp ()  <52>;
    (__arg_b.41 var=38 stl=R off=5) inp ()  <55>;
    (__ct_16s0.284 var=39) const_inp ()  <385>;
    (__ct_m4T0.285 var=43) const_inp ()  <386>;
    <83> {
      (__sp.49 var=21 __seff.312 var=115 stl=aluM) _pl_rd_res_reg_const_wr_res_reg_1_B1 (__ct_16s0.284 __sp.20 __sp.20)  <414>;
      (__seff.379 var=115 stl=MC off=0) MC_2_dr_move_aluM_2_any (__seff.312)  <534>;
    } stp=0;
    <84> {
      (b.77 var=25) _pl_rd_res_reg_const_store_1_B1 (__arg_b.358 __ct_m4T0.285 b.24 __sp.49)  <415>;
      (__arg_b.358 var=38 stl=dmw_wr) dmw_wr_2_dr_move_R_1_w32 (__arg_b.41)  <513>;
    } stp=16;
    <122> {
      (__la.415 var=35 stl=__spill_DMw off=-4) stack_store_bndl_B3 (__la.378 __sp.49 __stack_offs_m4.424)  <530>;
      (__la.378 var=35 stl=dmw_wr) to___spill_DMw_dmw_wr_2_dr_move_R_1_w32 (__la.34)  <533>;
      (__stack_offs_m4.424 var=117) const_inp ()  <548>;
    } stp=20;
    <138> {
      () vd_nop_ID ()  <595>;
    } stp=4;
    <139> {
      () vd_nop_ID ()  <596>;
    } stp=8;
    <140> {
      () vd_nop_ID ()  <597>;
    } stp=12;
    call {
        () chess_separator_scheduler ()  <91>;
    } #4 off=24 nxt=5
    #5 off=24 nxt=8
    (__ct_m8T0.286 var=47) const_inp ()  <387>;
    <82> {
      (a.79 var=26) _pl_rd_res_reg_const_store_1_B1 (__arg_a.363 __ct_m8T0.286 a.25 __sp.49)  <413>;
      (__arg_a.363 var=37 stl=dmw_wr) dmw_wr_2_dr_move_R_1_w32 (__arg_a.38)  <518>;
    } stp=0;
    call {
        () chess_separator_scheduler ()  <95>;
    } #8 off=28 nxt=9
    #9 off=28 nxt=12
    <81> {
      (__fch_a.82 var=64 stl=dmw_rd) load__pl_rd_res_reg_const_1_B1 (__ct_m8T0.286 a.79 __sp.49)  <412>;
      (__fch_a.365 var=64 stl=R off=4) R_4_dr_move_dmw_rd_3_w32 (__fch_a.82)  <520>;
    } stp=0;
    call {
        () chess_separator_scheduler ()  <100>;
    } #12 off=32 nxt=13
    #13 off=32 nxt=14
    <80> {
      (__tmp.86 var=67 stl=shC) _rs_const_1_B1 (__fch_a.364)  <411>;
      (__fch_a.364 var=64 stl=shA) shA_2_dr_move_R_1_w32 (__fch_a.365)  <519>;
      (__tmp.367 var=67 stl=R off=5) R_4_dr_move_shC_2_w32 (__tmp.86)  <522>;
    } stp=12;
    <161> {
      () vd_nop_ID ()  <618>;
    } stp=0;
    <162> {
      () vd_nop_ID ()  <619>;
    } stp=4;
    <163> {
      () vd_nop_ID ()  <620>;
    } stp=8;
    call {
        () chess_separator_scheduler ()  <105>;
    } #14 off=48 nxt=15
    #15 off=48 nxt=18
    (__ct_m12T0.287 var=51) const_inp ()  <388>;
    <79> {
      (aSign.89 var=27) _pl_rd_res_reg_const_store_1_B1 (__tmp.366 __ct_m12T0.287 aSign.26 __sp.49)  <410>;
      (__tmp.366 var=67 stl=dmw_wr) dmw_wr_2_dr_move_R_1_w32 (__tmp.367)  <521>;
    } stp=12;
    <141> {
      () vd_nop_ID ()  <598>;
    } stp=0;
    <142> {
      () vd_nop_ID ()  <599>;
    } stp=4;
    <143> {
      () vd_nop_ID ()  <600>;
    } stp=8;
    call {
        () chess_separator_scheduler ()  <109>;
    } #18 off=64 nxt=19
    #19 off=64 nxt=22
    <78> {
      (__fch_b.92 var=69 stl=dmw_rd) load__pl_rd_res_reg_const_1_B1 (__ct_m4T0.285 b.77 __sp.49)  <409>;
      (__fch_b.360 var=69 stl=R off=5) R_4_dr_move_dmw_rd_3_w32 (__fch_b.92)  <515>;
    } stp=0;
    call {
        () chess_separator_scheduler ()  <114>;
    } #22 off=68 nxt=23
    #23 off=68 nxt=24
    <77> {
      (__tmp.96 var=72 stl=shC) _rs_const_1_B1 (__fch_b.359)  <408>;
      (__fch_b.359 var=69 stl=shA) shA_2_dr_move_R_1_w32 (__fch_b.360)  <514>;
      (__tmp.362 var=72 stl=R off=6) R_4_dr_move_shC_2_w32 (__tmp.96)  <517>;
    } stp=12;
    <145> {
      () vd_nop_ID ()  <602>;
    } stp=0;
    <146> {
      () vd_nop_ID ()  <603>;
    } stp=4;
    <147> {
      () vd_nop_ID ()  <604>;
    } stp=8;
    call {
        () chess_separator_scheduler ()  <119>;
    } #24 off=84 nxt=25
    #25 off=84 nxt=26
    (__ct_m16T0.288 var=55) const_inp ()  <389>;
    <76> {
      (bSign.99 var=28) _pl_rd_res_reg_const_store_1_B1 (__tmp.361 __ct_m16T0.288 bSign.27 __sp.49)  <407>;
      (__tmp.361 var=72 stl=dmw_wr) dmw_wr_2_dr_move_R_1_w32 (__tmp.362)  <516>;
    } stp=12;
    <135> {
      () vd_nop_ID ()  <592>;
    } stp=0;
    <136> {
      () vd_nop_ID ()  <593>;
    } stp=4;
    <137> {
      () vd_nop_ID ()  <594>;
    } stp=8;
    call {
        () chess_separator_scheduler ()  <121>;
    } #26 off=100 nxt=27
    #27 off=100 nxt=36 tgt=31
    (__ct_m16S0.290 var=85) const_inp ()  <391>;
    (__trgt.292 var=112) const_inp ()  <393>;
    <72> {
      (__fch_aSign.100 var=74 stl=dmw_rd) load__pl_rd_res_reg_const_1_B1 (__ct_m12T0.287 aSign.89 __sp.49)  <403>;
      (__fch_aSign.371 var=74 stl=R off=6) R_4_dr_move_dmw_rd_3_w32 (__fch_aSign.100)  <526>;
    } stp=0;
    <73> {
      (__fch_bSign.101 var=75 stl=dmw_rd) load__pl_rd_res_reg_const_1_B1 (__ct_m16T0.288 bSign.99 __sp.49)  <404>;
      (__fch_bSign.369 var=75 stl=R off=2) R_4_dr_move_dmw_rd_3_w32 (__fch_bSign.101)  <524>;
    } stp=4;
    <74> {
      (__tmp.102 var=76 stl=aluC) _eq_1_B1 (__fch_aSign.370 __fch_bSign.368)  <405>;
      (__fch_bSign.368 var=75 stl=aluB) aluA_aluB_2_dr_move_R_1_w32_B1 (__fch_bSign.369)  <523>;
      (__fch_aSign.370 var=74 stl=aluA) aluA_aluB_2_dr_move_R_1_w32_B0 (__fch_aSign.371)  <525>;
      (__tmp.373 var=76 stl=R off=2) R_4_dr_move_aluC_2_bool (__tmp.102)  <528>;
    } stp=20;
    <75> {
      () nez_br_const_1_B1 (__tmp.372 __trgt.292)  <406>;
      (__tmp.372 var=76 stl=eqA) eqA_2_dr_move_R_1_bool (__tmp.373)  <527>;
    } stp=36;
    <148> {
      () vd_nop_ID ()  <605>;
    } stp=8;
    <149> {
      () vd_nop_ID ()  <606>;
    } stp=12;
    <150> {
      () vd_nop_ID ()  <607>;
    } stp=16;
    <151> {
      () vd_nop_ID ()  <608>;
    } stp=24;
    <152> {
      () vd_nop_ID ()  <609>;
    } stp=28;
    <153> {
      () vd_nop_ID ()  <610>;
    } stp=32;
    <154> {
      () vd_nop_ID ()  <611>;
    } stp=40;
    <155> {
      () vd_nop_ID ()  <612>;
    } stp=44;
    if {
        {
            () if_expr (__either.283)  <154>;
            (__either.283 var=111) undefined ()  <384>;
        } #29
        {
            #31 off=184 nxt=32
            (__uint_subFloat32Sigs___uint___uint___sint.289 var=82) const_inp ()  <390>;
            <71> {
              (__link.141 var=83 stl=lnk_pf) jal_const_1_B1 (__uint_subFloat32Sigs___uint___uint___sint.289)  <402>;
              (__link.374 var=83 stl=LR off=0) LR_4_dr_move_lnk_pf_1_w32 (__link.141)  <529>;
            } stp=0;
            <156> {
              () vd_nop_ID ()  <613>;
            } stp=4;
            call {
                (__tmp.143 var=84 stl=R off=2 __extDMb.146 var=20 __extDMb_void.147 var=30 __extPMb.148 var=19 __extPMb_void.149 var=29 __vola.150 var=16) F__uint_subFloat32Sigs___uint___uint___sint (__link.374 __fch_a.365 __fch_b.360 __fch_aSign.371 __extDMb.19 __extDMb_void.29 __extPMb.18 __extPMb_void.28 __vola.15)  <166>;
            } #32 off=192 nxt=34
            #34 off=192 nxt=-2
            () out (__tmp.143)  <176>;
            () sink (__vola.150)  <177>;
            () sink (__extPMb.148)  <180>;
            () sink (__extDMb.146)  <181>;
            () sink (__sp.156)  <182>;
            () sink (b.77)  <186>;
            () sink (a.79)  <187>;
            () sink (aSign.89)  <188>;
            () sink (bSign.99)  <189>;
            () sink (__extPMb_void.149)  <190>;
            () sink (__extDMb_void.147)  <191>;
            <69> {
              (__sp.156 var=21 __seff.299 var=114 stl=aluM) wr_res_reg__pl_rd_res_reg_const_1_B1 (__ct_m16S0.290 __sp.49 __sp.49)  <400>;
              (__seff.382 var=114 stl=MC off=0) MC_2_dr_move_aluM_2_any (__seff.299)  <540>;
            } stp=4;
            <70> {
              () __rts_jr_1_B1 (__la.380)  <401>;
              (__la.380 var=35 stl=trgt) trgt_2_dr_move_R_1_w32 (__la.381)  <535>;
            } stp=16;
            <123> {
              (__la.418 var=35 stl=dmw_rd) stack_load_bndl_B3 (__la.415 __sp.49 __stack_offs_m4.425)  <536>;
              (__la.381 var=35 stl=R off=4) from___spill_DMw_R_4_dr_move_dmw_rd_3_w32 (__la.418)  <539>;
              (__stack_offs_m4.425 var=117) const_inp ()  <549>;
            } stp=0;
            <131> {
              () vd_nop_ID ()  <588>;
            } stp=8;
            <132> {
              () vd_nop_ID ()  <589>;
            } stp=12;
            <133> {
              () vd_nop_ID ()  <590>;
            } stp=20;
            <134> {
              () vd_nop_ID ()  <591>;
            } stp=24;
        } #30
        {
            #36 off=148 nxt=37
            (__uint_addFloat32Sigs___uint___uint___sint.291 var=93) const_inp ()  <392>;
            <68> {
              (__link.196 var=94 stl=lnk_pf) jal_const_1_B1 (__uint_addFloat32Sigs___uint___uint___sint.291)  <399>;
              (__link.393 var=94 stl=LR off=0) LR_4_dr_move_lnk_pf_1_w32 (__link.196)  <541>;
            } stp=0;
            <144> {
              () vd_nop_ID ()  <601>;
            } stp=4;
            call {
                (__tmp.198 var=95 stl=R off=2 __extDMb.201 var=20 __extDMb_void.202 var=30 __extPMb.203 var=19 __extPMb_void.204 var=29 __vola.205 var=16) F__uint_addFloat32Sigs___uint___uint___sint (__link.393 __fch_a.365 __fch_b.360 __fch_aSign.371 __extDMb.19 __extDMb_void.29 __extPMb.18 __extPMb_void.28 __vola.15)  <232>;
            } #37 off=156 nxt=39
            #39 off=156 nxt=-2
            () out (__tmp.198)  <242>;
            () sink (__vola.205)  <243>;
            () sink (__extPMb.203)  <246>;
            () sink (__extDMb.201)  <247>;
            () sink (__sp.211)  <248>;
            () sink (b.77)  <252>;
            () sink (a.79)  <253>;
            () sink (aSign.89)  <254>;
            () sink (bSign.99)  <255>;
            () sink (__extPMb_void.204)  <256>;
            () sink (__extDMb_void.202)  <257>;
            <66> {
              (__sp.211 var=21 __seff.296 var=113 stl=aluM) wr_res_reg__pl_rd_res_reg_const_1_B1 (__ct_m16S0.290 __sp.49 __sp.49)  <397>;
              (__seff.399 var=113 stl=MC off=0) MC_2_dr_move_aluM_2_any (__seff.296)  <547>;
            } stp=4;
            <67> {
              () __rts_jr_1_B1 (__la.397)  <398>;
              (__la.397 var=35 stl=trgt) trgt_2_dr_move_R_1_w32 (__la.398)  <542>;
            } stp=16;
            <130> {
              (__la.421 var=35 stl=dmw_rd) stack_load_bndl_B3 (__la.415 __sp.49 __stack_offs_m4.426)  <543>;
              (__la.398 var=35 stl=R off=4) from___spill_DMw_R_4_dr_move_dmw_rd_3_w32 (__la.421)  <546>;
              (__stack_offs_m4.426 var=117) const_inp ()  <550>;
            } stp=0;
            <157> {
              () vd_nop_ID ()  <614>;
            } stp=8;
            <158> {
              () vd_nop_ID ()  <615>;
            } stp=12;
            <159> {
              () vd_nop_ID ()  <616>;
            } stp=20;
            <160> {
              () vd_nop_ID ()  <617>;
            } stp=24;
        } #35
        {
        } #40
    } #28
    130 -> 66 del=1;
    123 -> 69 del=1;
} #0
0 : '../softfloat/softfloat.c';
----------
0 : (0,896:0,0);
3 : (0,896:32,0);
4 : (0,896:32,0);
5 : (0,896:21,0);
8 : (0,900:12,5);
9 : (0,900:32,6);
12 : (0,900:12,7);
13 : (0,900:12,9);
14 : (0,900:12,9);
15 : (0,900:10,12);
18 : (0,901:12,13);
19 : (0,901:32,14);
22 : (0,901:12,15);
23 : (0,901:12,17);
24 : (0,901:12,17);
25 : (0,901:10,20);
26 : (0,901:10,20);
27 : (0,902:15,20);
28 : (0,902:4,20);
30 : (0,902:26,21);
31 : (0,903:37,21);
32 : (0,903:15,21);
34 : (0,903:8,21);
35 : (0,905:9,25);
36 : (0,906:37,25);
37 : (0,906:15,25);
39 : (0,906:8,25);
----------
91 : (0,896:32,0);
95 : (0,900:12,5);
100 : (0,900:12,7);
105 : (0,900:12,9);
109 : (0,901:12,13);
114 : (0,901:12,15);
119 : (0,901:12,17);
121 : (0,901:10,20);
154 : (0,902:4,20);
166 : (0,903:15,21);
232 : (0,906:15,25);
397 : (0,906:8,25) (0,903:8,0) (0,896:40,0);
398 : (0,906:8,25);
399 : (0,906:15,25);
400 : (0,903:8,21) (0,903:8,0) (0,896:40,0);
401 : (0,903:8,21);
402 : (0,903:15,21);
403 : (0,902:9,20) (0,898:9,0) (0,896:40,0);
404 : (0,902:18,20) (0,898:16,0) (0,896:40,0);
405 : (0,902:15,20);
406 : (0,902:4,20);
407 : (0,898:16,0) (0,896:40,0) (0,901:4,19);
408 : (0,901:12,16);
409 : (0,901:32,14) (0,896:40,0);
410 : (0,898:9,0) (0,896:40,0) (0,900:4,11);
411 : (0,900:12,8);
412 : (0,900:32,6) (0,896:29,0) (0,896:40,0);
413 : (0,896:29,0) (0,896:40,0) (0,896:21,0);
414 : (0,896:8,0);
415 : (0,896:40,0) (0,896:32,0);
536 : (0,903:8,0);
543 : (0,906:8,0);

