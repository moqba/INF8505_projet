This directory can be used as output directory for "hazard_test", a program which generates C test
code for hazard testing. These are the steps to be followed:

(1) In the oneliners project, add extra option 
        -H 10
for disassembling.

(2) Compile the oneliners project. The output directory will contain reports on single sided hazard
matches.

(3) Now run hazard_test. E.g. as follows, in this directory:
       hazard_test ../lib/oneliners/Release . 10 "*"
This generates C test code in the current directory, starting from single sided hazard match reports
in the oneliners output file. 10 test functions are targeted by hazard rule, and all possible hazard
rules are targeted (globbing pattern *).

(4) The output of hazard_test tells you to prepare some files yourself. Some of this has already
been done here. So you should be able to compile the application project test.prx, and run it in
native, ISS and RTL mode.

(5) To measure code coverage during RTL simulation, add e.g. the following to the go option file:
      #define CODE_COV_ELAB -cm line+cond+branch -cm_cond basic+allops
      #define CODE_COV_SIMV -cm line+cond+branch

(6) Compile all required model files. Elaborate RTL. Run and compare native, ISS and RTL via
      (cd to hazard_test directory)
      (view file ../Makefile.test; look at all defined make targets, lines 117 and following)
      ln -s htest.c test.c
      make -f Makefile.test ok
      make -f Makefile.test diff
      make -f Makefile.test rtldiff

(7) Inspect the RTL coverage database
      cd ../hdl/mcld_vlog
      verdi -cov -covdir simv.vdb


Some explanation on the files present in this directory:
- "hazard_test.skip" is an additional skip list for oneliners. Here, some additional oneliners are
skipped because they don't compile in native mode.
- "missing_stuff.h" contains material from the oneliners which is not found and copied by
hazard_test, but which is required to compile the generated C code.
- "test.prx" is a chess application project around the C files generated by hazard_test
- "run-one.tcl" is a generic script for running and comparing native, ISS and RTL
- "customize.tcl", called by run-one.tcl, customizes to mcld
