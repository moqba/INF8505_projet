/*
-- File : regfile.n
--
-- Contents : nML model for the TLX processor -- main register file access.
--
-- Copyright (c) 2014-2021 Synopsys, Inc. This Synopsys processor model
-- captures an ASIP Designer Design Technique. The model and all associated
-- documentation are proprietary to Synopsys, Inc. and may only be used
-- pursuant to the terms and conditions of a written license agreement with
-- Synopsys, Inc.  All other use, reproduction, modification, or distribution
-- of the Synopsys processor model or the associated  documentation is
-- strictly prohibited.
*/



mode mR0(r: c4u) { value: R[r] read(r0) write(w0); syntax: "r" dec r; image: "0"::r; }
mode mR1(r: c4u) { value: R[r] read(r1) write(w1); syntax: "r" dec r; image: "0"::r; }
mode mR2(r: c4u) { value: R[r] read(r2) write(w2); syntax: "r" dec r; image: "0"::r; }

// single field modes

mode mLR() { value: LR read(lrr) write(lrw);  syntax: "r15"; image: ""; }
mode mPL() { value: PL read(plr) write(plw);  syntax: ""; image: ""; }
mode mPH() { value: PH read(phr) write(phw);  syntax: ""; image: ""; }

// Reading R0 yields 0.

chess_view() { r0 = R[0]; } -> { r0 = 0; }
chess_view() { r1 = R[0]; } -> { r1 = 0; }
chess_view() { r2 = R[0]; } -> { r2 = 0; }

hw_init R = others => 0;

