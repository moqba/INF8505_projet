//-----------------------------------------------------
// General options

include_directory: "../lib";
generate_testbench;
#include "dlx_define.h"

//-----------------------------------------------------
// Merging of files and units

merge_identical_entities;
merge_package_body_files;
merge_entity_architecture_files;

//-----------------------------------------------------
// HDL configuration

annotation_level: 100;
timescale: "1ns/1ps";
selector_constants: 2;
original_port_names;
#ifndef HDL_DISABLE_REGLOG
log_register_writes;
log_memory_writes;
#endif
configuration_files: 0;

//-----------------------------------------------------
// Reset

asynchronous_reset;

reset_all_memories;

reset_start: 2;
reset_width: 5; // 5ns is 5 cycles at 1GHz clock

//-----------------------------------------------------
// Low power

operand_isolation_functional_units;
operand_isolation_multiplexers;

register_vector_write_enable;

//-----------------------------------------------------
// Timing: reducing the critical path

register_addresses_from_decoder;
direct_write_disable_on_stall : 1;

//-----------------------------------------------------
// External processor-stall and memory wait states

//-----------------------------------------------------
// Transformations of data-path

#ifdef USE_CUSTOM_RTL
//Inclusion of custom RTL for the user_div module

    //location of verilog files (absolute or relative to "hdl" directory)
    import_path: "user_hdl";  

    //the file that has the top level module - file name must match module name
    files_to_import: "user_div.v";

    //other verilog files to be imported as part of the custom RTL
    extra_verilog_files:  "divide.v";

    //change port names on module to remove _in/out. Note: 
    //  The port name translation can be to anything, it is not restricted to just removing in/out.
    //  The new names must match what is in the top-level module of the custom RTL block
    module user_div :
       instance user_div
         port div_opA_in -> div_opA
         port div_opB_in -> div_opB
         port div_start_in -> div_start
         port div_ready_out -> div_ready
         port div_result_out -> div_result

    //Add the clock and reset pins to the module I/F
    add_clock_reset: user_div;
#endif //USE_CUSTOM_RTL

remove_false_paths;
// merge_register_addresses : 2;

//-----------------------------------------------------
// Makefiles and file of files

synopsys_makefile;
dc_synthesis_scripts: no_auto_ungroup "freq=1000" "ocd_clock_freq=100";
spyglass_scripts;

#if defined(CODE_COV_SIMV)
#define STR_(X) #X
#define STR(X) STR_(X)

// RTL coverage
hdl_elaborate_command: "default"
                       STR(CODE_COV_ELAB);
hdl_basic_simulation_command:  "default"
                               "-cm_name $(notdir $(CURDIR))$(CM_SUFFIX)"
                               STR(CODE_COV_SIMV);

#elif defined(ISA_COV_SIMV)

// ISA coverage
isa_coverpoints: dlx;
hdl_basic_simulation_command:  "default"
                               "-cm_name $(notdir $(CURDIR))$(CM_SUFFIX)";

#endif


//-----------------------------------------------------
// On Chip Debugging

on_chip_debugging : 2;
ocd_store_watchpoints : DMb;
ocd_delay_watchpoints: 1;
//-----------------------------------------------------
// HW-/SW Debug

#ifdef HWSW_DEBUG
// hwsw options
hwsw_debug_scripts: 1;
hwsw_debug_focus_stage: "WB";
hdlsim_64bit;
#endif

systemverilog;
